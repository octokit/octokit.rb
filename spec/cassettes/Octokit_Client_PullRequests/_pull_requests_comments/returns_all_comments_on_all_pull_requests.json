{"http_interactions":[{"request":{"method":"get","uri":"https://api.github.com/repos/octokit/octokit.rb/pulls/comments","body":{"encoding":"UTF-8","string":""},"headers":{"Accept":["application/vnd.github.v3+json"],"User-Agent":["Octokit Ruby Gem 3.0.0.pre"],"Authorization":["token <<ACCESS_TOKEN>>"],"Accept-Encoding":["gzip;q=1.0,deflate;q=0.6,identity;q=0.3"]}},"response":{"status":{"code":200,"message":"OK"},"headers":{"Server":["GitHub.com"],"Date":["Mon, 13 Jan 2014 09:33:55 GMT"],"Content-Type":["application/json; charset=utf-8"],"Transfer-Encoding":["chunked"],"Status":["200 OK"],"X-Ratelimit-Limit":["5000"],"X-Ratelimit-Remaining":["4490"],"X-Ratelimit-Reset":["1389606162"],"Cache-Control":["private, max-age=60, s-maxage=60"],"Etag":["\"53498ced16aebe4ffff9b186730edd1d\""],"X-Oauth-Scopes":["user, public_repo, repo, gist"],"X-Accepted-Oauth-Scopes":["repo, repo:status, repo:deployment, public_repo, delete_repo, user, user:email, user:follow, admin:org, write:org, read:org, gist, site_admin, user:assets, user:assets:read"],"Vary":["Accept, Authorization, Cookie, X-GitHub-OTP","Accept-Encoding"],"X-Github-Media-Type":["github.v3; format=json"],"Link":["<https://api.github.com/repositories/417862/pulls/comments?page=2>; rel=\"next\", <https://api.github.com/repositories/417862/pulls/comments?page=4>; rel=\"last\""],"X-Content-Type-Options":["nosniff"],"Access-Control-Allow-Credentials":["true"],"Access-Control-Expose-Headers":["ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval"],"Access-Control-Allow-Origin":["*"],"X-Github-Request-Id":["443FDC73:4B93:ADE51:52D3B303"]},"body":{"encoding":"UTF-8","string":"[{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/104862\",\"id\":104862,\"diff_hunk\":\"@@ -1,4 +1,4 @@\\n-module Octokit\\n+,module Octokit\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":null,\"original_position\":2,\"commit_id\":\"3ae33359b5135c9c5e43f6eda6623465aa36427f\",\"original_commit_id\":\"472ae972b0180136c4745df19bbb045a5c6efa38\",\"user\":{\"login\":\"sferik\",\"id\":10308,\"avatar_url\":\"https://gravatar.com/avatar/1f74b13f1e5c6c69cb5d7fbaabb1e2cb?d=https%3A%2F%2Fidenticons.github.com%2F9efb1a59d7b58e69996cf0e32cb71098.png&r=x\",\"gravatar_id\":\"1f74b13f1e5c6c69cb5d7fbaabb1e2cb\",\"url\":\"https://api.github.com/users/sferik\",\"html_url\":\"https://github.com/sferik\",\"followers_url\":\"https://api.github.com/users/sferik/followers\",\"following_url\":\"https://api.github.com/users/sferik/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/sferik/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/sferik/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/sferik/subscriptions\",\"organizations_url\":\"https://api.github.com/users/sferik/orgs\",\"repos_url\":\"https://api.github.com/users/sferik/repos\",\"events_url\":\"https://api.github.com/users/sferik/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/sferik/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Please remove this.\",\"created_at\":\"2011-08-28T23:35:50Z\",\"updated_at\":\"2011-08-28T23:42:45Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/52#discussion_r104862\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/52\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/104862\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/52#discussion_r104862\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/52\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/104864\",\"id\":104864,\"diff_hunk\":\"@@ -1,4 +1,4 @@\\n-module Octokit\\n+,module Octokit\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":null,\"original_position\":2,\"commit_id\":\"3ae33359b5135c9c5e43f6eda6623465aa36427f\",\"original_commit_id\":\"472ae972b0180136c4745df19bbb045a5c6efa38\",\"user\":{\"login\":\"alexkwolfe\",\"id\":569,\"avatar_url\":\"https://gravatar.com/avatar/72d403ad3c243379dfdb5da3e6179c05?d=https%3A%2F%2Fidenticons.github.com%2F8b16ebc056e613024c057be590b542eb.png&r=x\",\"gravatar_id\":\"72d403ad3c243379dfdb5da3e6179c05\",\"url\":\"https://api.github.com/users/alexkwolfe\",\"html_url\":\"https://github.com/alexkwolfe\",\"followers_url\":\"https://api.github.com/users/alexkwolfe/followers\",\"following_url\":\"https://api.github.com/users/alexkwolfe/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/alexkwolfe/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/alexkwolfe/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/alexkwolfe/subscriptions\",\"organizations_url\":\"https://api.github.com/users/alexkwolfe/orgs\",\"repos_url\":\"https://api.github.com/users/alexkwolfe/repos\",\"events_url\":\"https://api.github.com/users/alexkwolfe/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/alexkwolfe/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Whoops. Fixed now.\",\"created_at\":\"2011-08-28T23:43:30Z\",\"updated_at\":\"2011-08-28T23:43:30Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/52#discussion_r104864\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/52\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/104864\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/52#discussion_r104864\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/52\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6357698\",\"id\":6357698,\"diff_hunk\":\"@@ -478,6 +478,45 @@\\n         :body => {:message => \\\"Maximum number of login attempts exceeded\\\"}.to_json\\n       expect { Octokit.get('/user') }.to raise_error Octokit::TooManyLoginAttempts\\n     end\\n+\\n+    it \\\"raises on unknown client errors\\\" do\\n+      stub_get('/user').to_return \\\\\\n+        :status => 418,\\n+        :headers => {\\n+          :content_type => \\\"application/json\\\",\\n+        },\\n+        :body => {:message => \\\"I'm a teapot\\\"}.to_json\\n+       expect { Octokit.get('/user') }.to raise_error Octokit::ClientError\",\"path\":\"spec/octokit/client_spec.rb\",\"position\":null,\"original_position\":12,\"commit_id\":\"390ff8efdb96fea98cf7ccd3f4e98416af4c8363\",\"original_commit_id\":\"3476c7e49d97aea98b799639ef282a45986a6051\",\"user\":{\"login\":\"jdpace\",\"id\":2513,\"avatar_url\":\"https://gravatar.com/avatar/4c36f7481ec8ed0dc5f286c10eb71a9e?d=https%3A%2F%2Fidenticons.github.com%2F84b20b1f5a0d103f5710bb67a043cd78.png&r=x\",\"gravatar_id\":\"4c36f7481ec8ed0dc5f286c10eb71a9e\",\"url\":\"https://api.github.com/users/jdpace\",\"html_url\":\"https://github.com/jdpace\",\"followers_url\":\"https://api.github.com/users/jdpace/followers\",\"following_url\":\"https://api.github.com/users/jdpace/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jdpace/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jdpace/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jdpace/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jdpace/orgs\",\"repos_url\":\"https://api.github.com/users/jdpace/repos\",\"events_url\":\"https://api.github.com/users/jdpace/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jdpace/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"indentation\",\"created_at\":\"2013-09-13T20:13:32Z\",\"updated_at\":\"2013-09-16T16:52:02Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6357698\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6357698\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6357698\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6357706\",\"id\":6357706,\"diff_hunk\":\"@@ -478,6 +478,45 @@\\n         :body => {:message => \\\"Maximum number of login attempts exceeded\\\"}.to_json\\n       expect { Octokit.get('/user') }.to raise_error Octokit::TooManyLoginAttempts\\n     end\\n+\\n+    it \\\"raises on unknown client errors\\\" do\\n+      stub_get('/user').to_return \\\\\\n+        :status => 418,\\n+        :headers => {\\n+          :content_type => \\\"application/json\\\",\\n+        },\\n+        :body => {:message => \\\"I'm a teapot\\\"}.to_json\\n+       expect { Octokit.get('/user') }.to raise_error Octokit::ClientError\\n+    end\\n+\\n+    it \\\"raises on unknown server errors\\\" do\\n+      stub_get('/user').to_return \\\\\\n+        :status => 509,\\n+        :headers => {\\n+          :content_type => \\\"application/json\\\",\\n+        },\\n+        :body => {:message => \\\"Bandwidth exceeded\\\"}.to_json\\n+       expect { Octokit.get('/user') }.to raise_error Octokit::ServerError\",\"path\":\"spec/octokit/client_spec.rb\",\"position\":null,\"original_position\":22,\"commit_id\":\"390ff8efdb96fea98cf7ccd3f4e98416af4c8363\",\"original_commit_id\":\"3476c7e49d97aea98b799639ef282a45986a6051\",\"user\":{\"login\":\"jdpace\",\"id\":2513,\"avatar_url\":\"https://gravatar.com/avatar/4c36f7481ec8ed0dc5f286c10eb71a9e?d=https%3A%2F%2Fidenticons.github.com%2F84b20b1f5a0d103f5710bb67a043cd78.png&r=x\",\"gravatar_id\":\"4c36f7481ec8ed0dc5f286c10eb71a9e\",\"url\":\"https://api.github.com/users/jdpace\",\"html_url\":\"https://github.com/jdpace\",\"followers_url\":\"https://api.github.com/users/jdpace/followers\",\"following_url\":\"https://api.github.com/users/jdpace/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jdpace/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jdpace/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jdpace/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jdpace/orgs\",\"repos_url\":\"https://api.github.com/users/jdpace/repos\",\"events_url\":\"https://api.github.com/users/jdpace/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jdpace/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"indentation\",\"created_at\":\"2013-09-13T20:13:38Z\",\"updated_at\":\"2013-09-16T16:52:02Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6357706\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6357706\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6357706\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6357714\",\"id\":6357714,\"diff_hunk\":\"@@ -478,6 +478,45 @@\\n         :body => {:message => \\\"Maximum number of login attempts exceeded\\\"}.to_json\\n       expect { Octokit.get('/user') }.to raise_error Octokit::TooManyLoginAttempts\\n     end\\n+\\n+    it \\\"raises on unknown client errors\\\" do\\n+      stub_get('/user').to_return \\\\\\n+        :status => 418,\\n+        :headers => {\\n+          :content_type => \\\"application/json\\\",\\n+        },\\n+        :body => {:message => \\\"I'm a teapot\\\"}.to_json\\n+       expect { Octokit.get('/user') }.to raise_error Octokit::ClientError\\n+    end\\n+\\n+    it \\\"raises on unknown server errors\\\" do\\n+      stub_get('/user').to_return \\\\\\n+        :status => 509,\\n+        :headers => {\\n+          :content_type => \\\"application/json\\\",\\n+        },\\n+        :body => {:message => \\\"Bandwidth exceeded\\\"}.to_json\\n+       expect { Octokit.get('/user') }.to raise_error Octokit::ServerError\\n+    end\\n+\\n+    it \\\"handles documentation URLs in error messages\\\" do\\n+      stub_get('/user').to_return \\\\\\n+        :status => 415,\\n+        :headers => {\\n+          :content_type => \\\"application/json\\\",\\n+        },\\n+        :body => {\\n+          :message => \\\"Unsupported Media Type\\\",\\n+          :documentation_url => \\\"http://developer.github.com/v3\\\"\\n+        }.to_json\\n+        begin\\n+          Octokit.get('/user')\\n+        rescue Octokit::UnsupportedMediaType => e\\n+          msg = \\\"415 - Unsupported Media Type\\\"\\n+          expect(e.message).to include(msg)\\n+          expect(e.documentation_url).to eq(\\\"http://developer.github.com/v3\\\")\\n+        end\",\"path\":\"spec/octokit/client_spec.rb\",\"position\":null,\"original_position\":41,\"commit_id\":\"390ff8efdb96fea98cf7ccd3f4e98416af4c8363\",\"original_commit_id\":\"3476c7e49d97aea98b799639ef282a45986a6051\",\"user\":{\"login\":\"jdpace\",\"id\":2513,\"avatar_url\":\"https://gravatar.com/avatar/4c36f7481ec8ed0dc5f286c10eb71a9e?d=https%3A%2F%2Fidenticons.github.com%2F84b20b1f5a0d103f5710bb67a043cd78.png&r=x\",\"gravatar_id\":\"4c36f7481ec8ed0dc5f286c10eb71a9e\",\"url\":\"https://api.github.com/users/jdpace\",\"html_url\":\"https://github.com/jdpace\",\"followers_url\":\"https://api.github.com/users/jdpace/followers\",\"following_url\":\"https://api.github.com/users/jdpace/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jdpace/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jdpace/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jdpace/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jdpace/orgs\",\"repos_url\":\"https://api.github.com/users/jdpace/repos\",\"events_url\":\"https://api.github.com/users/jdpace/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jdpace/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"indentation\",\"created_at\":\"2013-09-13T20:13:53Z\",\"updated_at\":\"2013-09-16T16:52:02Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6357714\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6357714\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6357714\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6379322\",\"id\":6379322,\"diff_hunk\":\"@@ -13,28 +13,19 @@ def self.from_response(response)\\n       headers = response[:response_headers]\\n \\n       if klass =  case status\\n-                  when 400 then Octokit::BadRequest\\n-                  when 401\\n-                    if Octokit::OneTimePasswordRequired.required_header(headers)\\n-                      Octokit::OneTimePasswordRequired\\n-                    else\\n-                      Octokit::Unauthorized\\n-                    end\\n-                  when 403\\n-                    if body =~ /rate limit exceeded/i\\n-                      Octokit::TooManyRequests\\n-                    elsif body =~ /login attempts exceeded/i\\n-                      Octokit::TooManyLoginAttempts\\n-                    else\\n-                      Octokit::Forbidden\\n-                    end\\n-                  when 404 then Octokit::NotFound\\n-                  when 406 then Octokit::NotAcceptable\\n-                  when 422 then Octokit::UnprocessableEntity\\n-                  when 500 then Octokit::InternalServerError\\n-                  when 501 then Octokit::NotImplemented\\n-                  when 502 then Octokit::BadGateway\\n-                  when 503 then Octokit::ServiceUnavailable\\n+                  when 400      then Octokit::BadRequest\\n+                  when 401      then error_for_401(headers)\\n+                  when 403      then error_for_403(body)\\n+                  when 404      then Octokit::NotFound\\n+                  when 406      then Octokit::NotAcceptable\\n+                  when 415      then Octokit::UnsupportedMediaType\\n+                  when 422      then Octokit::UnprocessableEntity\\n+                  when 400..499 then Octokit::ClientError\",\"path\":\"lib/octokit/error.rb\",\"position\":33,\"original_position\":33,\"commit_id\":\"390ff8efdb96fea98cf7ccd3f4e98416af4c8363\",\"original_commit_id\":\"f9dc60136c87496d1739dd9e0010340cd3a671d8\",\"user\":{\"login\":\"jasonrudolph\",\"id\":2988,\"avatar_url\":\"https://gravatar.com/avatar/592e1e6f041f9a4ec51846fd82013aea?d=https%3A%2F%2Fidenticons.github.com%2Ffaa453efde4ac6a36849ba381feb9e87.png&r=x\",\"gravatar_id\":\"592e1e6f041f9a4ec51846fd82013aea\",\"url\":\"https://api.github.com/users/jasonrudolph\",\"html_url\":\"https://github.com/jasonrudolph\",\"followers_url\":\"https://api.github.com/users/jasonrudolph/followers\",\"following_url\":\"https://api.github.com/users/jasonrudolph/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jasonrudolph/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jasonrudolph/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jasonrudolph/orgs\",\"repos_url\":\"https://api.github.com/users/jasonrudolph/repos\",\"events_url\":\"https://api.github.com/users/jasonrudolph/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jasonrudolph/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\":sparkles: \",\"created_at\":\"2013-09-16T15:24:26Z\",\"updated_at\":\"2013-09-16T16:52:02Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6379322\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6379322\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6379322\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6379475\",\"id\":6379475,\"diff_hunk\":\"@@ -96,32 +116,41 @@ def build_error_message\\n       message << \\\"#{response_message}\\\" unless response_message.nil?\\n       message << \\\"#{response_error}\\\" unless response_error.nil?\\n       message << \\\"#{response_error_summary}\\\" unless response_error_summary.nil?\\n+      message << \\\" // See: #{documentation_url}\\\" unless documentation_url.nil?\\n       message\\n     end\\n   end\\n \\n+  # Raised on unknown errors in the 400-499 range\",\"path\":\"lib/octokit/error.rb\",\"position\":null,\"original_position\":87,\"commit_id\":\"390ff8efdb96fea98cf7ccd3f4e98416af4c8363\",\"original_commit_id\":\"f9dc60136c87496d1739dd9e0010340cd3a671d8\",\"user\":{\"login\":\"jasonrudolph\",\"id\":2988,\"avatar_url\":\"https://gravatar.com/avatar/592e1e6f041f9a4ec51846fd82013aea?d=https%3A%2F%2Fidenticons.github.com%2Ffaa453efde4ac6a36849ba381feb9e87.png&r=x\",\"gravatar_id\":\"592e1e6f041f9a4ec51846fd82013aea\",\"url\":\"https://api.github.com/users/jasonrudolph\",\"html_url\":\"https://github.com/jasonrudolph\",\"followers_url\":\"https://api.github.com/users/jasonrudolph/followers\",\"following_url\":\"https://api.github.com/users/jasonrudolph/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jasonrudolph/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jasonrudolph/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jasonrudolph/orgs\",\"repos_url\":\"https://api.github.com/users/jasonrudolph/repos\",\"events_url\":\"https://api.github.com/users/jasonrudolph/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jasonrudolph/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"I recommend removing \\\"unknown\\\" here.\\r\\n\\r\\nFor example, a `BadRequest` error **is a** `ClientError`. So, I think this is more accurate:\\r\\n\\r\\n    Raised on errors in the 400-499 range\",\"created_at\":\"2013-09-16T15:29:20Z\",\"updated_at\":\"2013-09-16T16:52:02Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6379475\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6379475\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6379475\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6379492\",\"id\":6379492,\"diff_hunk\":\"@@ -132,23 +161,29 @@ class TooManyRequests < Forbidden; end\\n   class TooManyLoginAttempts < Forbidden; end\\n \\n   # Raised when GitHub returns a 404 HTTP status code\\n-  class NotFound < Error; end\\n+  class NotFound < ClientError; end\\n \\n   # Raised when GitHub returns a 406 HTTP status code\\n-  class NotAcceptable < Error; end\\n+  class NotAcceptable < ClientError; end\\n+\\n+  # Raised when GitHub returns a 414 HTTP status code\\n+  class UnsupportedMediaType < ClientError; end\\n \\n   # Raised when GitHub returns a 422 HTTP status code\\n-  class UnprocessableEntity < Error; end\\n+  class UnprocessableEntity < ClientError; end\\n+\\n+  # Raised on unknown errors in the 500-599 range\",\"path\":\"lib/octokit/error.rb\",\"position\":null,\"original_position\":142,\"commit_id\":\"390ff8efdb96fea98cf7ccd3f4e98416af4c8363\",\"original_commit_id\":\"f9dc60136c87496d1739dd9e0010340cd3a671d8\",\"user\":{\"login\":\"jasonrudolph\",\"id\":2988,\"avatar_url\":\"https://gravatar.com/avatar/592e1e6f041f9a4ec51846fd82013aea?d=https%3A%2F%2Fidenticons.github.com%2Ffaa453efde4ac6a36849ba381feb9e87.png&r=x\",\"gravatar_id\":\"592e1e6f041f9a4ec51846fd82013aea\",\"url\":\"https://api.github.com/users/jasonrudolph\",\"html_url\":\"https://github.com/jasonrudolph\",\"followers_url\":\"https://api.github.com/users/jasonrudolph/followers\",\"following_url\":\"https://api.github.com/users/jasonrudolph/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jasonrudolph/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jasonrudolph/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jasonrudolph/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jasonrudolph/orgs\",\"repos_url\":\"https://api.github.com/users/jasonrudolph/repos\",\"events_url\":\"https://api.github.com/users/jasonrudolph/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jasonrudolph/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"I recommend removing \\\"unknown\\\" here (similar to `ClientError` above.)\",\"created_at\":\"2013-09-16T15:30:05Z\",\"updated_at\":\"2013-09-16T16:52:02Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6379492\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6379492\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6379492\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6445614\",\"id\":6445614,\"diff_hunk\":\"@@ -96,32 +116,41 @@ def build_error_message\\n       message << \\\"#{response_message}\\\" unless response_message.nil?\\n       message << \\\"#{response_error}\\\" unless response_error.nil?\\n       message << \\\"#{response_error_summary}\\\" unless response_error_summary.nil?\\n+      message << \\\" // See: #{documentation_url}\\\" unless documentation_url.nil?\",\"path\":\"lib/octokit/error.rb\",\"position\":82,\"original_position\":82,\"commit_id\":\"390ff8efdb96fea98cf7ccd3f4e98416af4c8363\",\"original_commit_id\":\"390ff8efdb96fea98cf7ccd3f4e98416af4c8363\",\"user\":{\"login\":\"catsby\",\"id\":61721,\"avatar_url\":\"https://gravatar.com/avatar/dfb3948650131e4f0385c3328187cfca?d=https%3A%2F%2Fidenticons.github.com%2Fc2e9e9488cc6ebe3c2ad22f34a771d48.png&r=x\",\"gravatar_id\":\"dfb3948650131e4f0385c3328187cfca\",\"url\":\"https://api.github.com/users/catsby\",\"html_url\":\"https://github.com/catsby\",\"followers_url\":\"https://api.github.com/users/catsby/followers\",\"following_url\":\"https://api.github.com/users/catsby/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/catsby/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/catsby/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/catsby/subscriptions\",\"organizations_url\":\"https://api.github.com/users/catsby/orgs\",\"repos_url\":\"https://api.github.com/users/catsby/repos\",\"events_url\":\"https://api.github.com/users/catsby/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/catsby/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\":smiley: this is great\",\"created_at\":\"2013-09-18T20:34:00Z\",\"updated_at\":\"2013-09-18T20:34:00Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6445614\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/6445614\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/308#discussion_r6445614\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/308\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/8442878\",\"id\":8442878,\"diff_hunk\":\"@@ -122,14 +122,29 @@ def organization_repositories(org, options = {})\\n       # @example\\n       #   Octokit.organization_members('github')\\n       # @example\\n-      #   @client.organization_members('github')\\n-      # @example\\n       #   Octokit.org_members('github')\\n       def organization_members(org, options = {})\\n-        paginate \\\"orgs/#{org}/members\\\", options\\n+        path = \\\"public_\\\" if options.delete(:public)\\n+        paginate \\\"orgs/#{org}/#{path}members\\\", options\\n       end\\n       alias :org_members :organization_members\\n \\n+      # Get organization public members\\n+      #\\n+      # Lists the public members of an organization\\n+      #\\n+      # @param org [String] Organization GitHub username.\\n+      # @return [Array<Sawyer::Resource>] Array of hashes representing users.\\n+      # @see http://developer.github.com/v3/orgs/members/#public-members-list\\n+      # @example\\n+      #   Octokit.organization_public_members('github')\\n+      # @example\\n+      #   Octokit.org_members('github')\",\"path\":\"lib/octokit/client/organizations.rb\",\"position\":null,\"original_position\":24,\"commit_id\":\"9fe0345db7aed1220bcd7f5390ad3230a0682c46\",\"original_commit_id\":\"db55e4a065043116ae8af8cc13d03763a170a418\",\"user\":{\"login\":\"joeyw\",\"id\":478247,\"avatar_url\":\"https://gravatar.com/avatar/18c2c44835cc7c5ada7c027f12674714?d=https%3A%2F%2Fidenticons.github.com%2Fed9413309978d4bfa6c8ddc7d2f61d66.png&r=x\",\"gravatar_id\":\"18c2c44835cc7c5ada7c027f12674714\",\"url\":\"https://api.github.com/users/joeyw\",\"html_url\":\"https://github.com/joeyw\",\"followers_url\":\"https://api.github.com/users/joeyw/followers\",\"following_url\":\"https://api.github.com/users/joeyw/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/joeyw/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/joeyw/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/joeyw/subscriptions\",\"organizations_url\":\"https://api.github.com/users/joeyw/orgs\",\"repos_url\":\"https://api.github.com/users/joeyw/repos\",\"events_url\":\"https://api.github.com/users/joeyw/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/joeyw/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Just a tiny nitpick, this should be `.org_public_members`.\",\"created_at\":\"2013-12-18T17:22:10Z\",\"updated_at\":\"2013-12-18T20:59:58Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/383#discussion_r8442878\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/383\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/8442878\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/383#discussion_r8442878\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/383\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/8450990\",\"id\":8450990,\"diff_hunk\":\"@@ -122,14 +122,29 @@ def organization_repositories(org, options = {})\\n       # @example\\n       #   Octokit.organization_members('github')\\n       # @example\\n-      #   @client.organization_members('github')\\n-      # @example\\n       #   Octokit.org_members('github')\\n       def organization_members(org, options = {})\\n-        paginate \\\"orgs/#{org}/members\\\", options\\n+        path = \\\"public_\\\" if options.delete(:public)\\n+        paginate \\\"orgs/#{org}/#{path}members\\\", options\\n       end\\n       alias :org_members :organization_members\\n \\n+      # Get organization public members\\n+      #\\n+      # Lists the public members of an organization\\n+      #\\n+      # @param org [String] Organization GitHub username.\\n+      # @return [Array<Sawyer::Resource>] Array of hashes representing users.\\n+      # @see http://developer.github.com/v3/orgs/members/#public-members-list\\n+      # @example\\n+      #   Octokit.organization_public_members('github')\\n+      # @example\\n+      #   Octokit.org_members('github')\",\"path\":\"lib/octokit/client/organizations.rb\",\"position\":null,\"original_position\":24,\"commit_id\":\"9fe0345db7aed1220bcd7f5390ad3230a0682c46\",\"original_commit_id\":\"db55e4a065043116ae8af8cc13d03763a170a418\",\"user\":{\"login\":\"pengwynn\",\"id\":865,\"avatar_url\":\"https://gravatar.com/avatar/7e19cd5486b5d6dc1ef90e671ba52ae0?d=https%3A%2F%2Fidenticons.github.com%2F3b3dbaf68507998acd6a5a5254ab2d76.png&r=x\",\"gravatar_id\":\"7e19cd5486b5d6dc1ef90e671ba52ae0\",\"url\":\"https://api.github.com/users/pengwynn\",\"html_url\":\"https://github.com/pengwynn\",\"followers_url\":\"https://api.github.com/users/pengwynn/followers\",\"following_url\":\"https://api.github.com/users/pengwynn/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pengwynn/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pengwynn/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pengwynn/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pengwynn/orgs\",\"repos_url\":\"https://api.github.com/users/pengwynn/repos\",\"events_url\":\"https://api.github.com/users/pengwynn/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pengwynn/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"Thanks fixed in 9fe0345\",\"created_at\":\"2013-12-18T21:01:54Z\",\"updated_at\":\"2013-12-18T21:01:54Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/383#discussion_r8450990\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/383\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/8450990\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/383#discussion_r8450990\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/383\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/8813356\",\"id\":8813356,\"diff_hunk\":\"@@ -0,0 +1,97 @@\\n+module Octokit\\n+  class Client\\n+\\n+    # Methods for the Deployments API\\n+    #\\n+    # @see http://developer.github.com/v3/repos/commits/deployments/\\n+    module Deployments\\n+\\n+      DEPLOYMENTS_PREVIEW_MEDIA_TYPE = \\\"application/vnd.github.cannonball-preview+json\\\".freeze\\n+\\n+      # List all deployments for a repository\\n+      #\\n+      # @param repo [String, Repository, Hash] A GitHub repository\\n+      # @return [Array<Sawyer::Resource>] A list of deployments\\n+      # @see http://developer.github.com/v3/repos/deployments/#list-deployments\\n+      def deployments(repo, options = {})\\n+        options[:accept] ||= DEPLOYMENTS_PREVIEW_MEDIA_TYPE\\n+        warn_deployments_preview\\n+        deployments = get(\\\"repos/#{Repository.new(repo)}/deployments\\\", options)\\n+\\n+        deployments.map { |d| decode_payload_field(d) }\\n+      end\\n+      alias :list_deployments :deployments\\n+\\n+      # Create a deployment for a ref\\n+      #\\n+      # @param repo [String, Repository, Hash] A GitHub repository\\n+      # @param ref [String] The ref to deploy\\n+      # @option options [String] :payload Meta info about the deployment\\n+      # @option options [String] :force Optional parameter to bypass any ahead/behind checks or commit status checks. Default: false\\n+      # @option options [String] :auto_merge Optional parameter to merge the default branch into the requested deployment branch if necessary. Default: false\\n+      # @option options [String] :description Optional short description.\\n+      # @return [Sawyer::Resource] A deployment\\n+      # @see http://developer.github.com/v3/repos/deployments/#create-a-deployment\\n+      def create_deployment(repo, ref, options = {})\\n+        options[:ref] = ref\\n+        options[:accept] ||= DEPLOYMENTS_PREVIEW_MEDIA_TYPE\\n+        warn_deployments_preview\\n+        deployment = post(\\\"repos/#{Repository.new(repo)}/deployments\\\", options)\\n+\\n+        decode_payload_field(deployment)\\n+      end\\n+\\n+      # List all statuses for a Deployment\\n+      #\\n+      # @param deployment_url [String] A URL for a deployment resource\\n+      # @return [Array<Sawyer::Resource>] A list of deployment statuses\\n+      # @see http://developer.github.com/v3/repos/deployments/#list-deployment-statuses\\n+      def deployment_statuses(deployment_url, options = {})\\n+        warn_deployments_preview\\n+        deployment = get(deployment_url, :accept => DEPLOYMENTS_PREVIEW_MEDIA_TYPE)\\n+        options[:accept] ||= DEPLOYMENTS_PREVIEW_MEDIA_TYPE\\n+        statuses = get(deployment.rels[:statuses].href, options)\\n+\\n+        statuses.map { |s| decode_payload_field(s) }\\n+      end\\n+      alias :list_deployment_statuses :deployment_statuses\\n+\\n+      # Create a deployment status for a Deployment\\n+      #\\n+      # @param deployment_url [String] A URL for a deployment resource\\n+      # @param state [String] The state: pending, success, failure, error\\n+      # @return [Sawyer::Resource] A deployment status\\n+      # @see http://developer.github.com/v3/repos/deployments/#create-a-deployment-status\\n+      def create_deployment_status(deployment_url, state, options = {})\\n+        warn_deployments_preview\\n+        deployment = get(deployment_url, :accept => DEPLOYMENTS_PREVIEW_MEDIA_TYPE)\\n+        options[:state] = state.to_s.downcase\\n+        options[:accept] ||= DEPLOYMENTS_PREVIEW_MEDIA_TYPE\\n+        status = post(deployment.rels[:statuses].href, options)\\n+\\n+        decode_payload_field(status)\\n+      end\\n+\\n+      private\\n+\\n+      def warn_deployments_preview\",\"path\":\"lib/octokit/client/deployments.rb\",\"position\":null,\"original_position\":77,\"commit_id\":\"b034920492857f8acb16d304a01152f697da38f1\",\"original_commit_id\":\"8cbad51a3ff17e082b674945f00f5f45f440228d\",\"user\":{\"login\":\"halorgium\",\"id\":263,\"avatar_url\":\"https://gravatar.com/avatar/3200c5348a7c08c2f20fdaceac6804b0?d=https%3A%2F%2Fidenticons.github.com%2F8c19f571e251e61cb8dd3612f26d5ecf.png&r=x\",\"gravatar_id\":\"3200c5348a7c08c2f20fdaceac6804b0\",\"url\":\"https://api.github.com/users/halorgium\",\"html_url\":\"https://github.com/halorgium\",\"followers_url\":\"https://api.github.com/users/halorgium/followers\",\"following_url\":\"https://api.github.com/users/halorgium/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/halorgium/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/halorgium/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/halorgium/subscriptions\",\"organizations_url\":\"https://api.github.com/users/halorgium/orgs\",\"repos_url\":\"https://api.github.com/users/halorgium/repos\",\"events_url\":\"https://api.github.com/users/halorgium/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/halorgium/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Perhaps this could warn once. When integrating this with a CLI, it is annoying to see this over and over. \\r\\nAlso, could this be guarded by a `ENV` var or something?\",\"created_at\":\"2014-01-12T10:28:39Z\",\"updated_at\":\"2014-01-12T20:41:54Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/402#discussion_r8813356\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/402\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/8813356\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/402#discussion_r8813356\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/402\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/8815239\",\"id\":8815239,\"diff_hunk\":\"@@ -0,0 +1,97 @@\\n+module Octokit\\n+  class Client\\n+\\n+    # Methods for the Deployments API\\n+    #\\n+    # @see http://developer.github.com/v3/repos/commits/deployments/\\n+    module Deployments\\n+\\n+      DEPLOYMENTS_PREVIEW_MEDIA_TYPE = \\\"application/vnd.github.cannonball-preview+json\\\".freeze\\n+\\n+      # List all deployments for a repository\\n+      #\\n+      # @param repo [String, Repository, Hash] A GitHub repository\\n+      # @return [Array<Sawyer::Resource>] A list of deployments\\n+      # @see http://developer.github.com/v3/repos/deployments/#list-deployments\\n+      def deployments(repo, options = {})\\n+        options[:accept] ||= DEPLOYMENTS_PREVIEW_MEDIA_TYPE\\n+        warn_deployments_preview\\n+        deployments = get(\\\"repos/#{Repository.new(repo)}/deployments\\\", options)\\n+\\n+        deployments.map { |d| decode_payload_field(d) }\\n+      end\\n+      alias :list_deployments :deployments\\n+\\n+      # Create a deployment for a ref\\n+      #\\n+      # @param repo [String, Repository, Hash] A GitHub repository\\n+      # @param ref [String] The ref to deploy\\n+      # @option options [String] :payload Meta info about the deployment\\n+      # @option options [String] :force Optional parameter to bypass any ahead/behind checks or commit status checks. Default: false\\n+      # @option options [String] :auto_merge Optional parameter to merge the default branch into the requested deployment branch if necessary. Default: false\\n+      # @option options [String] :description Optional short description.\\n+      # @return [Sawyer::Resource] A deployment\\n+      # @see http://developer.github.com/v3/repos/deployments/#create-a-deployment\\n+      def create_deployment(repo, ref, options = {})\\n+        options[:ref] = ref\\n+        options[:accept] ||= DEPLOYMENTS_PREVIEW_MEDIA_TYPE\\n+        warn_deployments_preview\\n+        deployment = post(\\\"repos/#{Repository.new(repo)}/deployments\\\", options)\\n+\\n+        decode_payload_field(deployment)\\n+      end\\n+\\n+      # List all statuses for a Deployment\\n+      #\\n+      # @param deployment_url [String] A URL for a deployment resource\\n+      # @return [Array<Sawyer::Resource>] A list of deployment statuses\\n+      # @see http://developer.github.com/v3/repos/deployments/#list-deployment-statuses\\n+      def deployment_statuses(deployment_url, options = {})\\n+        warn_deployments_preview\\n+        deployment = get(deployment_url, :accept => DEPLOYMENTS_PREVIEW_MEDIA_TYPE)\\n+        options[:accept] ||= DEPLOYMENTS_PREVIEW_MEDIA_TYPE\\n+        statuses = get(deployment.rels[:statuses].href, options)\\n+\\n+        statuses.map { |s| decode_payload_field(s) }\\n+      end\\n+      alias :list_deployment_statuses :deployment_statuses\\n+\\n+      # Create a deployment status for a Deployment\\n+      #\\n+      # @param deployment_url [String] A URL for a deployment resource\\n+      # @param state [String] The state: pending, success, failure, error\\n+      # @return [Sawyer::Resource] A deployment status\\n+      # @see http://developer.github.com/v3/repos/deployments/#create-a-deployment-status\\n+      def create_deployment_status(deployment_url, state, options = {})\\n+        warn_deployments_preview\\n+        deployment = get(deployment_url, :accept => DEPLOYMENTS_PREVIEW_MEDIA_TYPE)\\n+        options[:state] = state.to_s.downcase\\n+        options[:accept] ||= DEPLOYMENTS_PREVIEW_MEDIA_TYPE\\n+        status = post(deployment.rels[:statuses].href, options)\\n+\\n+        decode_payload_field(status)\\n+      end\\n+\\n+      private\\n+\\n+      def warn_deployments_preview\",\"path\":\"lib/octokit/client/deployments.rb\",\"position\":null,\"original_position\":77,\"commit_id\":\"b034920492857f8acb16d304a01152f697da38f1\",\"original_commit_id\":\"8cbad51a3ff17e082b674945f00f5f45f440228d\",\"user\":{\"login\":\"pengwynn\",\"id\":865,\"avatar_url\":\"https://gravatar.com/avatar/7e19cd5486b5d6dc1ef90e671ba52ae0?d=https%3A%2F%2Fidenticons.github.com%2F3b3dbaf68507998acd6a5a5254ab2d76.png&r=x\",\"gravatar_id\":\"7e19cd5486b5d6dc1ef90e671ba52ae0\",\"url\":\"https://api.github.com/users/pengwynn\",\"html_url\":\"https://github.com/pengwynn\",\"followers_url\":\"https://api.github.com/users/pengwynn/followers\",\"following_url\":\"https://api.github.com/users/pengwynn/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pengwynn/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pengwynn/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pengwynn/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pengwynn/orgs\",\"repos_url\":\"https://api.github.com/users/pengwynn/repos\",\"events_url\":\"https://api.github.com/users/pengwynn/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pengwynn/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"@halorgium Good point. Let me know if b034920 meets your need.\",\"created_at\":\"2014-01-12T20:44:12Z\",\"updated_at\":\"2014-01-12T20:44:12Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/402#discussion_r8815239\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/402\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/8815239\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/402#discussion_r8815239\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/402\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1369149\",\"id\":1369149,\"diff_hunk\":\"@@ -41,17 +41,16 @@ def request(method, path, options, version, authenticate, raw, force_urlencoded)\\n       response = connection(authenticate, raw, version, force_urlencoded).send(method) do |request|\\n         case method\\n         when :delete, :get\\n-          if auto_traversal && per_page.nil?\\n-            self.per_page = 100\\n-          end\\n+          per_page = 100 if auto_traversal && per_page.nil?\",\"path\":\"lib/octokit/request.rb\",\"position\":7,\"original_position\":7,\"commit_id\":\"7d069dedd4cb56bf57760688657abd0e6b5a28b8\",\"original_commit_id\":\"7d069dedd4cb56bf57760688657abd0e6b5a28b8\",\"user\":{\"login\":\"catsby\",\"id\":61721,\"avatar_url\":\"https://gravatar.com/avatar/dfb3948650131e4f0385c3328187cfca?d=https%3A%2F%2Fidenticons.github.com%2Fc2e9e9488cc6ebe3c2ad22f34a771d48.png&r=x\",\"gravatar_id\":\"dfb3948650131e4f0385c3328187cfca\",\"url\":\"https://api.github.com/users/catsby\",\"html_url\":\"https://github.com/catsby\",\"followers_url\":\"https://api.github.com/users/catsby/followers\",\"following_url\":\"https://api.github.com/users/catsby/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/catsby/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/catsby/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/catsby/subscriptions\",\"organizations_url\":\"https://api.github.com/users/catsby/orgs\",\"repos_url\":\"https://api.github.com/users/catsby/repos\",\"events_url\":\"https://api.github.com/users/catsby/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/catsby/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"If you change this to `self.per_page = 100 ...` the tests pass again. Still a little confused why :/\",\"created_at\":\"2012-08-14T03:07:45Z\",\"updated_at\":\"2012-08-14T03:07:45Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/124#discussion_r1369149\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/124\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1369149\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/124#discussion_r1369149\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/124\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1369168\",\"id\":1369168,\"diff_hunk\":\"@@ -41,17 +41,16 @@ def request(method, path, options, version, authenticate, raw, force_urlencoded)\\n       response = connection(authenticate, raw, version, force_urlencoded).send(method) do |request|\\n         case method\\n         when :delete, :get\\n-          if auto_traversal && per_page.nil?\\n-            self.per_page = 100\\n-          end\\n+          per_page = 100 if auto_traversal && per_page.nil?\",\"path\":\"lib/octokit/request.rb\",\"position\":7,\"original_position\":7,\"commit_id\":\"7d069dedd4cb56bf57760688657abd0e6b5a28b8\",\"original_commit_id\":\"7d069dedd4cb56bf57760688657abd0e6b5a28b8\",\"user\":{\"login\":\"calavera\",\"id\":1050,\"avatar_url\":\"https://gravatar.com/avatar/0c39b828636367fc6e22b7be8c803c74?d=https%3A%2F%2Fidenticons.github.com%2F5055cbf43fac3f7e2336b27310f0b9ef.png&r=x\",\"gravatar_id\":\"0c39b828636367fc6e22b7be8c803c74\",\"url\":\"https://api.github.com/users/calavera\",\"html_url\":\"https://github.com/calavera\",\"followers_url\":\"https://api.github.com/users/calavera/followers\",\"following_url\":\"https://api.github.com/users/calavera/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/calavera/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/calavera/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/calavera/subscriptions\",\"organizations_url\":\"https://api.github.com/users/calavera/orgs\",\"repos_url\":\"https://api.github.com/users/calavera/repos\",\"events_url\":\"https://api.github.com/users/calavera/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/calavera/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"Yeah they pass because `self.per_page=` is setting a local variable inside the method, instead of setting the local variable in the connection.  \\r\\n\\r\\nTests pass with that change because it sets it every time.  \\r\\n\\r\\n\\r\\nOn Monday, August 13, 2012 at 8:07 PM, Clint wrote:\\r\\n\\r\\n> In lib/octokit/request.rb:\\r\\n> > @@ -41,17 +41,16 @@ def request(method, path, options, version, authenticate, raw, force_urlencoded) > response = connection(authenticate, raw, version, force_urlencoded).send(method) do |request| > case method > when :delete, :get > - if auto_traversal && per_page.nil? > - self.per_page = 100 > - end > + per_page = 100 if auto_traversal && per_page.nil?  \\r\\n> If you change this to self.per_page = 100 ... the tests pass again. Still a little confused why :/\\r\\n>  \\r\\n> —\\r\\n> Reply to this email directly or view it on GitHub (https://github.com/pengwynn/octokit/pull/124/files#r1369149).  \\r\\n>  \\r\\n>  \\r\\n>  \",\"created_at\":\"2012-08-14T03:14:58Z\",\"updated_at\":\"2012-08-14T03:14:58Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/124#discussion_r1369168\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/124\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1369168\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/124#discussion_r1369168\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/124\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1444504\",\"id\":1444504,\"diff_hunk\":\"@@ -41,17 +41,16 @@ def request(method, path, options, version, authenticate, raw, force_urlencoded)\\n       response = connection(authenticate, raw, version, force_urlencoded).send(method) do |request|\\n         case method\\n         when :delete, :get\\n-          if auto_traversal && per_page.nil?\\n-            self.per_page = 100\\n-          end\\n+          per_page = 100 if auto_traversal && per_page.nil?\",\"path\":\"lib/octokit/request.rb\",\"position\":7,\"original_position\":7,\"commit_id\":\"7d069dedd4cb56bf57760688657abd0e6b5a28b8\",\"original_commit_id\":\"7d069dedd4cb56bf57760688657abd0e6b5a28b8\",\"user\":{\"login\":\"catsby\",\"id\":61721,\"avatar_url\":\"https://gravatar.com/avatar/dfb3948650131e4f0385c3328187cfca?d=https%3A%2F%2Fidenticons.github.com%2Fc2e9e9488cc6ebe3c2ad22f34a771d48.png&r=x\",\"gravatar_id\":\"dfb3948650131e4f0385c3328187cfca\",\"url\":\"https://api.github.com/users/catsby\",\"html_url\":\"https://github.com/catsby\",\"followers_url\":\"https://api.github.com/users/catsby/followers\",\"following_url\":\"https://api.github.com/users/catsby/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/catsby/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/catsby/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/catsby/subscriptions\",\"organizations_url\":\"https://api.github.com/users/catsby/orgs\",\"repos_url\":\"https://api.github.com/users/catsby/repos\",\"events_url\":\"https://api.github.com/users/catsby/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/catsby/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"The way I'm reading it is setting `per_page` instead of `self.per_page` is setting a local variable, not the configuration option from [lib/octokit/configuration.rb](https://github.com/pengwynn/octokit/blob/master/lib/octokit/configuration.rb#L17). When we reference `per_page` here on 44 we're reaching out to the config option, which is set to 50 in [spec/octokit/client_spec.rb](https://github.com/pengwynn/octokit/blob/master/spec/octokit/client_spec.rb#L33). We then set a local variable `per_page` to 100, because `auto_traversal` is true and `per_page` (from the config) is not nil. The local variable gets pushed into the hash and we've now overridden the value we set when we fist configured the client.\\n\\nThe spec mentioned expects a `per_page` value of 50, but here we create a local variable with value 100, which gets past on to the next loop when doing auto traversal. When we use `self.per_page`, we continue to use (and set) the configuration option, so the per page is in fact persisted across all the subsequent requests when using auto traversal. \\n\\nIn short, we should be using the client's `per_page` via `self.per_page`, unless I'm missing something. Which I haven't ruled out ;)\",\"created_at\":\"2012-08-23T13:10:24Z\",\"updated_at\":\"2012-08-23T13:10:24Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/124#discussion_r1444504\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/124\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1444504\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/124#discussion_r1444504\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/124\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4650461\",\"id\":4650461,\"diff_hunk\":\"@@ -12,6 +12,17 @@ def search_repositories(q, options={})\\n       end\\n       alias :search_repos :search_repositories\\n \\n+      # Check if a repository exists\\n+      #\\n+      # @see http://developer.github.com/v3/repos/#get\\n+      # @param repo [String, Hash, Repository] A GitHub repository\\n+      # @return [Hashie::Mash] if a repository exists, false otherwise\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":8,\"original_position\":8,\"commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"original_commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"user\":{\"login\":\"dmyers\",\"id\":207171,\"avatar_url\":\"https://gravatar.com/avatar/0e5662a688c63f0a8926fcd7efd2db59?d=https%3A%2F%2Fidenticons.github.com%2F46a5aab2a18ade1429a6e0d359b96dde.png&r=x\",\"gravatar_id\":\"0e5662a688c63f0a8926fcd7efd2db59\",\"url\":\"https://api.github.com/users/dmyers\",\"html_url\":\"https://github.com/dmyers\",\"followers_url\":\"https://api.github.com/users/dmyers/followers\",\"following_url\":\"https://api.github.com/users/dmyers/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/dmyers/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/dmyers/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/dmyers/subscriptions\",\"organizations_url\":\"https://api.github.com/users/dmyers/orgs\",\"repos_url\":\"https://api.github.com/users/dmyers/repos\",\"events_url\":\"https://api.github.com/users/dmyers/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/dmyers/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Should this be \\\"@return [Boolean] True if a repository exists, false otherwise\\\"?\",\"created_at\":\"2013-06-12T05:29:36Z\",\"updated_at\":\"2013-06-12T05:30:04Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4650461\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4650461\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4650461\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4650470\",\"id\":4650470,\"diff_hunk\":\"@@ -12,6 +12,17 @@ def search_repositories(q, options={})\\n       end\\n       alias :search_repos :search_repositories\\n \\n+      # Check if a repository exists\\n+      #\\n+      # @see http://developer.github.com/v3/repos/#get\\n+      # @param repo [String, Hash, Repository] A GitHub repository\\n+      # @return [Hashie::Mash] if a repository exists, false otherwise\\n+      def repository?(repo, options = {})\\n+        repository(repo, options)\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":10,\"original_position\":10,\"commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"original_commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"user\":{\"login\":\"dmyers\",\"id\":207171,\"avatar_url\":\"https://gravatar.com/avatar/0e5662a688c63f0a8926fcd7efd2db59?d=https%3A%2F%2Fidenticons.github.com%2F46a5aab2a18ade1429a6e0d359b96dde.png&r=x\",\"gravatar_id\":\"0e5662a688c63f0a8926fcd7efd2db59\",\"url\":\"https://api.github.com/users/dmyers\",\"html_url\":\"https://github.com/dmyers\",\"followers_url\":\"https://api.github.com/users/dmyers/followers\",\"following_url\":\"https://api.github.com/users/dmyers/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/dmyers/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/dmyers/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/dmyers/subscriptions\",\"organizations_url\":\"https://api.github.com/users/dmyers/orgs\",\"repos_url\":\"https://api.github.com/users/dmyers/repos\",\"events_url\":\"https://api.github.com/users/dmyers/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/dmyers/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Should this return true if finds one?\",\"created_at\":\"2013-06-12T05:30:50Z\",\"updated_at\":\"2013-06-12T05:33:12Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4650470\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4650470\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4650470\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4650688\",\"id\":4650688,\"diff_hunk\":\"@@ -12,6 +12,17 @@ def search_repositories(q, options={})\\n       end\\n       alias :search_repos :search_repositories\\n \\n+      # Check if a repository exists\\n+      #\\n+      # @see http://developer.github.com/v3/repos/#get\\n+      # @param repo [String, Hash, Repository] A GitHub repository\\n+      # @return [Hashie::Mash] if a repository exists, false otherwise\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":8,\"original_position\":8,\"commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"original_commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"user\":{\"login\":\"calavera\",\"id\":1050,\"avatar_url\":\"https://gravatar.com/avatar/0c39b828636367fc6e22b7be8c803c74?d=https%3A%2F%2Fidenticons.github.com%2F5055cbf43fac3f7e2336b27310f0b9ef.png&r=x\",\"gravatar_id\":\"0c39b828636367fc6e22b7be8c803c74\",\"url\":\"https://api.github.com/users/calavera\",\"html_url\":\"https://github.com/calavera\",\"followers_url\":\"https://api.github.com/users/calavera/followers\",\"following_url\":\"https://api.github.com/users/calavera/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/calavera/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/calavera/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/calavera/subscriptions\",\"organizations_url\":\"https://api.github.com/users/calavera/orgs\",\"repos_url\":\"https://api.github.com/users/calavera/repos\",\"events_url\":\"https://api.github.com/users/calavera/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/calavera/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"An object different to `nil` and `false` is considered a truthy value in ruby, so this can be considered correct. I really don't want to enter in polemics, the method originally returned `true` but I changed it in the last minute because I thought that returning the object is more useful.\\r\\n\\r\\nImagine this code:\\r\\n\\r\\n```ruby\\r\\nif r = client.repository?('foo')\\r\\n  puts r.name\\r\\nelse\\r\\n  client.create_repository('calavera/foo')\\r\\nend\\r\\n```\\r\\n\\r\\nIf `repository?` returns `true` you'll need to call the api a second time to get the name of the repo.\",\"created_at\":\"2013-06-12T05:54:20Z\",\"updated_at\":\"2013-06-12T05:54:20Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4650688\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4650688\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4650688\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4650710\",\"id\":4650710,\"diff_hunk\":\"@@ -12,6 +12,17 @@ def search_repositories(q, options={})\\n       end\\n       alias :search_repos :search_repositories\\n \\n+      # Check if a repository exists\\n+      #\\n+      # @see http://developer.github.com/v3/repos/#get\\n+      # @param repo [String, Hash, Repository] A GitHub repository\\n+      # @return [Hashie::Mash] if a repository exists, false otherwise\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":8,\"original_position\":8,\"commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"original_commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"user\":{\"login\":\"dmyers\",\"id\":207171,\"avatar_url\":\"https://gravatar.com/avatar/0e5662a688c63f0a8926fcd7efd2db59?d=https%3A%2F%2Fidenticons.github.com%2F46a5aab2a18ade1429a6e0d359b96dde.png&r=x\",\"gravatar_id\":\"0e5662a688c63f0a8926fcd7efd2db59\",\"url\":\"https://api.github.com/users/dmyers\",\"html_url\":\"https://github.com/dmyers\",\"followers_url\":\"https://api.github.com/users/dmyers/followers\",\"following_url\":\"https://api.github.com/users/dmyers/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/dmyers/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/dmyers/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/dmyers/subscriptions\",\"organizations_url\":\"https://api.github.com/users/dmyers/orgs\",\"repos_url\":\"https://api.github.com/users/dmyers/repos\",\"events_url\":\"https://api.github.com/users/dmyers/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/dmyers/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"Ah I see now. Just wondered. :+1: \",\"created_at\":\"2013-06-12T05:56:02Z\",\"updated_at\":\"2013-06-12T05:56:02Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4650710\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4650710\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4650710\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4654672\",\"id\":4654672,\"diff_hunk\":\"@@ -12,6 +12,17 @@ def search_repositories(q, options={})\\n       end\\n       alias :search_repos :search_repositories\\n \\n+      # Check if a repository exists\\n+      #\\n+      # @see http://developer.github.com/v3/repos/#get\\n+      # @param repo [String, Hash, Repository] A GitHub repository\\n+      # @return [Hashie::Mash] if a repository exists, false otherwise\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":8,\"original_position\":8,\"commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"original_commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"user\":{\"login\":\"catsby\",\"id\":61721,\"avatar_url\":\"https://gravatar.com/avatar/dfb3948650131e4f0385c3328187cfca?d=https%3A%2F%2Fidenticons.github.com%2Fc2e9e9488cc6ebe3c2ad22f34a771d48.png&r=x\",\"gravatar_id\":\"dfb3948650131e4f0385c3328187cfca\",\"url\":\"https://api.github.com/users/catsby\",\"html_url\":\"https://github.com/catsby\",\"followers_url\":\"https://api.github.com/users/catsby/followers\",\"following_url\":\"https://api.github.com/users/catsby/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/catsby/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/catsby/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/catsby/subscriptions\",\"organizations_url\":\"https://api.github.com/users/catsby/orgs\",\"repos_url\":\"https://api.github.com/users/catsby/repos\",\"events_url\":\"https://api.github.com/users/catsby/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/catsby/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"I don't want to enter in polemics either, but I disagree here. `?` methods are predicates, and should return a `true` or `false` booleans and not just truthy objects, IMO. \\r\\n\\r\\nMore importantly though I disagree because of an established convention in the library for `?` methods, where they use `boolean_from_response()` defined here: https://github.com/octokit/octokit.rb/blob/master/lib/octokit/request.rb#L38-L45\",\"created_at\":\"2013-06-12T11:56:02Z\",\"updated_at\":\"2013-06-12T11:56:02Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4654672\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4654672\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4654672\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4660263\",\"id\":4660263,\"diff_hunk\":\"@@ -12,6 +12,17 @@ def search_repositories(q, options={})\\n       end\\n       alias :search_repos :search_repositories\\n \\n+      # Check if a repository exists\\n+      #\\n+      # @see http://developer.github.com/v3/repos/#get\\n+      # @param repo [String, Hash, Repository] A GitHub repository\\n+      # @return [Hashie::Mash] if a repository exists, false otherwise\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":8,\"original_position\":8,\"commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"original_commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"user\":{\"login\":\"calavera\",\"id\":1050,\"avatar_url\":\"https://gravatar.com/avatar/0c39b828636367fc6e22b7be8c803c74?d=https%3A%2F%2Fidenticons.github.com%2F5055cbf43fac3f7e2336b27310f0b9ef.png&r=x\",\"gravatar_id\":\"0c39b828636367fc6e22b7be8c803c74\",\"url\":\"https://api.github.com/users/calavera\",\"html_url\":\"https://github.com/calavera\",\"followers_url\":\"https://api.github.com/users/calavera/followers\",\"following_url\":\"https://api.github.com/users/calavera/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/calavera/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/calavera/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/calavera/subscriptions\",\"organizations_url\":\"https://api.github.com/users/calavera/orgs\",\"repos_url\":\"https://api.github.com/users/calavera/repos\",\"events_url\":\"https://api.github.com/users/calavera/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/calavera/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"What's the benefit of returning `true` rather than the object? `boolean_from_response` is used for api calls that return `204`, aka `No Content`, it's great for those cases.\\r\\n\\r\\nI think there is a real benefit of returning the object in this case, the GitHub api has quotas, and every call counts.\\r\\n\\r\\nAt the end, I don't really care, both values work in my case, but I think that the less calls to the api the better.\",\"created_at\":\"2013-06-12T16:25:48Z\",\"updated_at\":\"2013-06-12T16:25:48Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4660263\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4660263\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4660263\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4660653\",\"id\":4660653,\"diff_hunk\":\"@@ -12,6 +12,17 @@ def search_repositories(q, options={})\\n       end\\n       alias :search_repos :search_repositories\\n \\n+      # Check if a repository exists\\n+      #\\n+      # @see http://developer.github.com/v3/repos/#get\\n+      # @param repo [String, Hash, Repository] A GitHub repository\\n+      # @return [Hashie::Mash] if a repository exists, false otherwise\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":8,\"original_position\":8,\"commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"original_commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"user\":{\"login\":\"pengwynn\",\"id\":865,\"avatar_url\":\"https://gravatar.com/avatar/7e19cd5486b5d6dc1ef90e671ba52ae0?d=https%3A%2F%2Fidenticons.github.com%2F3b3dbaf68507998acd6a5a5254ab2d76.png&r=x\",\"gravatar_id\":\"7e19cd5486b5d6dc1ef90e671ba52ae0\",\"url\":\"https://api.github.com/users/pengwynn\",\"html_url\":\"https://github.com/pengwynn\",\"followers_url\":\"https://api.github.com/users/pengwynn/followers\",\"following_url\":\"https://api.github.com/users/pengwynn/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pengwynn/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pengwynn/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pengwynn/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pengwynn/orgs\",\"repos_url\":\"https://api.github.com/users/pengwynn/repos\",\"events_url\":\"https://api.github.com/users/pengwynn/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pengwynn/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"I tend to agree that `?` methods should return Booleans. I should have looked more closely at the return value before merging so quickly. \\r\\n\\r\\nI'm beginning to wonder if this should be the default behavior for all `GET` calls. Asking consumers to handle `Octokit::NotFound` seems heavy handed. Then we could have the `?` variations check for truthiness. It would be a big change but might make the developer experience more pleasant. Thoughts?\",\"created_at\":\"2013-06-12T16:41:23Z\",\"updated_at\":\"2013-06-12T16:41:23Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4660653\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4660653\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4660653\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4661148\",\"id\":4661148,\"diff_hunk\":\"@@ -12,6 +12,17 @@ def search_repositories(q, options={})\\n       end\\n       alias :search_repos :search_repositories\\n \\n+      # Check if a repository exists\\n+      #\\n+      # @see http://developer.github.com/v3/repos/#get\\n+      # @param repo [String, Hash, Repository] A GitHub repository\\n+      # @return [Hashie::Mash] if a repository exists, false otherwise\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":8,\"original_position\":8,\"commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"original_commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"user\":{\"login\":\"catsby\",\"id\":61721,\"avatar_url\":\"https://gravatar.com/avatar/dfb3948650131e4f0385c3328187cfca?d=https%3A%2F%2Fidenticons.github.com%2Fc2e9e9488cc6ebe3c2ad22f34a771d48.png&r=x\",\"gravatar_id\":\"dfb3948650131e4f0385c3328187cfca\",\"url\":\"https://api.github.com/users/catsby\",\"html_url\":\"https://github.com/catsby\",\"followers_url\":\"https://api.github.com/users/catsby/followers\",\"following_url\":\"https://api.github.com/users/catsby/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/catsby/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/catsby/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/catsby/subscriptions\",\"organizations_url\":\"https://api.github.com/users/catsby/orgs\",\"repos_url\":\"https://api.github.com/users/catsby/repos\",\"events_url\":\"https://api.github.com/users/catsby/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/catsby/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"> What's the benefit of returning true rather than the object?\\r\\n\\r\\nNot a huge one... I don't mean to argue really, just voicing an opinion. To me (and I think a Ruby convention) `?` is literally asking a question, in this context \\\"does this thing exist\\\" :\\r\\n\\r\\n```\\r\\nme: \\\"Does foo exist?\\\" \\r\\nclient: \\\"foo\\\"\\r\\nme: \\\"I guess so\\\"\\r\\n```\\r\\nYou're right though, in the context of an API client it's nice that after checking existence I already have `foo` and don't have to ask for it once I know it exists. \\r\\n\\r\\n> boolean_from_response is used for api calls that return 204, aka No Content\\r\\n\\r\\nI jumped the gun there using `boolean_from_response` as an example :) \\r\\n\\r\\n> every call counts\\r\\n\\r\\nVery true, and this reason probably trumps my objection. \\r\\n\\r\\n> I'm beginning to wonder if this should be the default behavior for all GET calls. Asking consumers to handle Octokit::NotFound seems heavy handed. Then we could have the ? variations check for truthiness. It would be a big change but might make the developer experience more pleasant. Thoughts?\\r\\n\\r\\nMeaning all `?` methods like this (if something exists, etc) would return the Hashie and not boolean? For an API wrapper like this, I could buy in. If we think that's a route to a better and consistent experience, then great. \",\"created_at\":\"2013-06-12T17:03:13Z\",\"updated_at\":\"2013-06-12T17:03:13Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4661148\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4661148\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4661148\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4661221\",\"id\":4661221,\"diff_hunk\":\"@@ -12,6 +12,17 @@ def search_repositories(q, options={})\\n       end\\n       alias :search_repos :search_repositories\\n \\n+      # Check if a repository exists\\n+      #\\n+      # @see http://developer.github.com/v3/repos/#get\\n+      # @param repo [String, Hash, Repository] A GitHub repository\\n+      # @return [Hashie::Mash] if a repository exists, false otherwise\",\"path\":\"lib/octokit/client/repositories.rb\",\"position\":8,\"original_position\":8,\"commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"original_commit_id\":\"4c72315d946a8a2b6e54ee43cf9143a4e302102b\",\"user\":{\"login\":\"pengwynn\",\"id\":865,\"avatar_url\":\"https://gravatar.com/avatar/7e19cd5486b5d6dc1ef90e671ba52ae0?d=https%3A%2F%2Fidenticons.github.com%2F3b3dbaf68507998acd6a5a5254ab2d76.png&r=x\",\"gravatar_id\":\"7e19cd5486b5d6dc1ef90e671ba52ae0\",\"url\":\"https://api.github.com/users/pengwynn\",\"html_url\":\"https://github.com/pengwynn\",\"followers_url\":\"https://api.github.com/users/pengwynn/followers\",\"following_url\":\"https://api.github.com/users/pengwynn/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pengwynn/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pengwynn/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pengwynn/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pengwynn/orgs\",\"repos_url\":\"https://api.github.com/users/pengwynn/repos\",\"events_url\":\"https://api.github.com/users/pengwynn/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pengwynn/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"@catsby No, I meant the other way. To have `.repository` return `nil` instead of raising `Octokit::NotFound`. We could then just provide `?` flavors as sugar.\",\"created_at\":\"2013-06-12T17:05:49Z\",\"updated_at\":\"2013-06-12T17:05:49Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4661221\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/4661221\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/260#discussion_r4661221\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/260\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/3811390\",\"id\":3811390,\"diff_hunk\":\"@@ -161,6 +161,9 @@ def unfollow(user, options={})\\n       # Get list of repos starred by a user.\\n       #\\n       # @param user [String] Username of the user to get the list of their starred repositories.\\n+      # @param options [Hash] Optional options\\n+      # @option options [String] :sort (created) Sort: <tt>created</tt>, <tt>updated</tt>, or <tt>comments</tt>.\",\"path\":\"lib/octokit/client/users.rb\",\"position\":null,\"original_position\":5,\"commit_id\":\"7e31ebdc579006d56f5a92a950d1f2745ac81094\",\"original_commit_id\":\"61159c72d8fee0ba7468043328b77db5f299b645\",\"user\":{\"login\":\"pengwynn\",\"id\":865,\"avatar_url\":\"https://gravatar.com/avatar/7e19cd5486b5d6dc1ef90e671ba52ae0?d=https%3A%2F%2Fidenticons.github.com%2F3b3dbaf68507998acd6a5a5254ab2d76.png&r=x\",\"gravatar_id\":\"7e19cd5486b5d6dc1ef90e671ba52ae0\",\"url\":\"https://api.github.com/users/pengwynn\",\"html_url\":\"https://github.com/pengwynn\",\"followers_url\":\"https://api.github.com/users/pengwynn/followers\",\"following_url\":\"https://api.github.com/users/pengwynn/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pengwynn/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pengwynn/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pengwynn/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pengwynn/orgs\",\"repos_url\":\"https://api.github.com/users/pengwynn/repos\",\"events_url\":\"https://api.github.com/users/pengwynn/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pengwynn/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"I don't think we support `comments` here.\",\"created_at\":\"2013-04-16T13:13:06Z\",\"updated_at\":\"2013-04-16T13:16:15Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/237#discussion_r3811390\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/237\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/3811390\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/237#discussion_r3811390\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/237\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/3811445\",\"id\":3811445,\"diff_hunk\":\"@@ -161,6 +161,9 @@ def unfollow(user, options={})\\n       # Get list of repos starred by a user.\\n       #\\n       # @param user [String] Username of the user to get the list of their starred repositories.\\n+      # @param options [Hash] Optional options\\n+      # @option options [String] :sort (created) Sort: <tt>created</tt>, <tt>updated</tt>, or <tt>comments</tt>.\",\"path\":\"lib/octokit/client/users.rb\",\"position\":null,\"original_position\":5,\"commit_id\":\"7e31ebdc579006d56f5a92a950d1f2745ac81094\",\"original_commit_id\":\"61159c72d8fee0ba7468043328b77db5f299b645\",\"user\":{\"login\":\"andrew\",\"id\":1060,\"avatar_url\":\"https://gravatar.com/avatar/8ddbf811da78bb0daeeb3cacd7cf743f?d=https%3A%2F%2Fidenticons.github.com%2F299a23a2291e2126b91d54f3601ec162.png&r=x\",\"gravatar_id\":\"8ddbf811da78bb0daeeb3cacd7cf743f\",\"url\":\"https://api.github.com/users/andrew\",\"html_url\":\"https://github.com/andrew\",\"followers_url\":\"https://api.github.com/users/andrew/followers\",\"following_url\":\"https://api.github.com/users/andrew/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/andrew/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/andrew/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/andrew/subscriptions\",\"organizations_url\":\"https://api.github.com/users/andrew/orgs\",\"repos_url\":\"https://api.github.com/users/andrew/repos\",\"events_url\":\"https://api.github.com/users/andrew/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/andrew/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"Ah yes, I've removed that now.\",\"created_at\":\"2013-04-16T13:16:45Z\",\"updated_at\":\"2013-04-16T13:16:45Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/237#discussion_r3811445\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/237\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/3811445\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/237#discussion_r3811445\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/237\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1899190\",\"id\":1899190,\"diff_hunk\":\"@@ -40,7 +40,7 @@\\n         to_return(:status => 302, :body => '', :headers =>\\n           { 'location' => \\\"https://nodeload.github.com/repos/pengwynn/octokit/tarball/\\\"})\\n       archive_link = @client.archive_link('pengwynn/octokit', :ref => \\\"master\\\")\\n-      expect(archive_link).to eq(\\\"https://nodeload.github.com/repos/pengwynn/octokit/tarball/\\\")\\n+      expect(archive_link).to eq(\\\"https://api.github.com/repos/pengwynn/octokit/tarball/master\\\")\",\"path\":\"spec/octokit/client/contents_spec.rb\",\"position\":null,\"original_position\":5,\"commit_id\":\"9d0a12b923761fb8715a2c9532ca5919aea5e821\",\"original_commit_id\":\"72a172de4799ba04c8fe278141f3e7c0dcff236a\",\"user\":{\"login\":\"pengwynn\",\"id\":865,\"avatar_url\":\"https://gravatar.com/avatar/7e19cd5486b5d6dc1ef90e671ba52ae0?d=https%3A%2F%2Fidenticons.github.com%2F3b3dbaf68507998acd6a5a5254ab2d76.png&r=x\",\"gravatar_id\":\"7e19cd5486b5d6dc1ef90e671ba52ae0\",\"url\":\"https://api.github.com/users/pengwynn\",\"html_url\":\"https://github.com/pengwynn\",\"followers_url\":\"https://api.github.com/users/pengwynn/followers\",\"following_url\":\"https://api.github.com/users/pengwynn/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pengwynn/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pengwynn/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pengwynn/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pengwynn/orgs\",\"repos_url\":\"https://api.github.com/users/pengwynn/repos\",\"events_url\":\"https://api.github.com/users/pengwynn/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pengwynn/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"Hmm, I think we actually want the nodeload link here. I'm :+1: for following redirects, but in this case we need to just return the value of the `Location` header. Maybe a second method that follows and does the download?\",\"created_at\":\"2012-10-21T20:15:50Z\",\"updated_at\":\"2012-10-26T21:24:30Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/162#discussion_r1899190\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/162\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1899190\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/162#discussion_r1899190\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/162\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1903389\",\"id\":1903389,\"diff_hunk\":\"@@ -40,7 +40,7 @@\\n         to_return(:status => 302, :body => '', :headers =>\\n           { 'location' => \\\"https://nodeload.github.com/repos/pengwynn/octokit/tarball/\\\"})\\n       archive_link = @client.archive_link('pengwynn/octokit', :ref => \\\"master\\\")\\n-      expect(archive_link).to eq(\\\"https://nodeload.github.com/repos/pengwynn/octokit/tarball/\\\")\\n+      expect(archive_link).to eq(\\\"https://api.github.com/repos/pengwynn/octokit/tarball/master\\\")\",\"path\":\"spec/octokit/client/contents_spec.rb\",\"position\":null,\"original_position\":5,\"commit_id\":\"9d0a12b923761fb8715a2c9532ca5919aea5e821\",\"original_commit_id\":\"72a172de4799ba04c8fe278141f3e7c0dcff236a\",\"user\":{\"login\":\"pezra\",\"id\":4122,\"avatar_url\":\"https://gravatar.com/avatar/f38112009dc16547051c8ac246cee443?d=https%3A%2F%2Fidenticons.github.com%2F6098ed616e715171f0dabad60a8e5197.png&r=x\",\"gravatar_id\":\"f38112009dc16547051c8ac246cee443\",\"url\":\"https://api.github.com/users/pezra\",\"html_url\":\"https://github.com/pezra\",\"followers_url\":\"https://api.github.com/users/pezra/followers\",\"following_url\":\"https://api.github.com/users/pezra/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pezra/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pezra/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pezra/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pezra/orgs\",\"repos_url\":\"https://api.github.com/users/pezra/repos\",\"events_url\":\"https://api.github.com/users/pezra/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pezra/received_events\",\"type\":\"User\",\"site_admin\":false},\"body\":\"It is feasible to return the final url after all the redirecting. However, i'm curious why you think it is important to return a uri that is unlikely to redirect.\",\"created_at\":\"2012-10-22T13:13:13Z\",\"updated_at\":\"2012-10-26T21:24:30Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/162#discussion_r1903389\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/162\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1903389\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/162#discussion_r1903389\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/162\"}}},{\"url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1903928\",\"id\":1903928,\"diff_hunk\":\"@@ -40,7 +40,7 @@\\n         to_return(:status => 302, :body => '', :headers =>\\n           { 'location' => \\\"https://nodeload.github.com/repos/pengwynn/octokit/tarball/\\\"})\\n       archive_link = @client.archive_link('pengwynn/octokit', :ref => \\\"master\\\")\\n-      expect(archive_link).to eq(\\\"https://nodeload.github.com/repos/pengwynn/octokit/tarball/\\\")\\n+      expect(archive_link).to eq(\\\"https://api.github.com/repos/pengwynn/octokit/tarball/master\\\")\",\"path\":\"spec/octokit/client/contents_spec.rb\",\"position\":null,\"original_position\":5,\"commit_id\":\"9d0a12b923761fb8715a2c9532ca5919aea5e821\",\"original_commit_id\":\"72a172de4799ba04c8fe278141f3e7c0dcff236a\",\"user\":{\"login\":\"pengwynn\",\"id\":865,\"avatar_url\":\"https://gravatar.com/avatar/7e19cd5486b5d6dc1ef90e671ba52ae0?d=https%3A%2F%2Fidenticons.github.com%2F3b3dbaf68507998acd6a5a5254ab2d76.png&r=x\",\"gravatar_id\":\"7e19cd5486b5d6dc1ef90e671ba52ae0\",\"url\":\"https://api.github.com/users/pengwynn\",\"html_url\":\"https://github.com/pengwynn\",\"followers_url\":\"https://api.github.com/users/pengwynn/followers\",\"following_url\":\"https://api.github.com/users/pengwynn/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/pengwynn/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/pengwynn/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/pengwynn/subscriptions\",\"organizations_url\":\"https://api.github.com/users/pengwynn/orgs\",\"repos_url\":\"https://api.github.com/users/pengwynn/repos\",\"events_url\":\"https://api.github.com/users/pengwynn/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/pengwynn/received_events\",\"type\":\"User\",\"site_admin\":true},\"body\":\"In this case the URL is [guaranteed to redirect][downloads-url]. We have to build the S3 URL on the fly, and for private repos, it has expiring tokens in it. We want Octokit to handle the ultimate resolution of that URL and pass that off to whatever process is downloading the archive and not require them to in turn handle redirects. Make sense?\\r\\n\\r\\n[downloads-url]: http://developer.github.com/v3/repos/contents/#get-archive-link\",\"created_at\":\"2012-10-22T14:03:44Z\",\"updated_at\":\"2012-10-26T21:24:30Z\",\"html_url\":\"https://github.com/octokit/octokit.rb/pull/162#discussion_r1903928\",\"pull_request_url\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/162\",\"_links\":{\"self\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/comments/1903928\"},\"html\":{\"href\":\"https://github.com/octokit/octokit.rb/pull/162#discussion_r1903928\"},\"pull_request\":{\"href\":\"https://api.github.com/repos/octokit/octokit.rb/pulls/162\"}}}]"},"http_version":null},"recorded_at":"Mon, 13 Jan 2014 09:33:56 GMT"}],"recorded_with":"VCR 2.4.0"}