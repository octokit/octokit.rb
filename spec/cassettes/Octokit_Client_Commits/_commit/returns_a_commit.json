{"http_interactions":[{"request":{"method":"get","uri":"https://api.github.com/repos/sferik/rails_admin/commits/3cdfabd973bc3caac209cba903cfdb3bf6636bcd","body":{"encoding":"UTF-8","string":""},"headers":{"Accept":["application/vnd.github.v3+json"],"User-Agent":["Octokit Ruby Gem 3.0.0.pre"],"Authorization":["token <<ACCESS_TOKEN>>"],"Accept-Encoding":["gzip;q=1.0,deflate;q=0.6,identity;q=0.3"]}},"response":{"status":{"code":200,"message":"OK"},"headers":{"Server":["GitHub.com"],"Date":["Mon, 13 Jan 2014 10:22:40 GMT"],"Content-Type":["application/json; charset=utf-8"],"Transfer-Encoding":["chunked"],"Status":["200 OK"],"X-Ratelimit-Limit":["5000"],"X-Ratelimit-Remaining":["4860"],"X-Ratelimit-Reset":["1389611485"],"Cache-Control":["private, max-age=60, s-maxage=60"],"Last-Modified":["Fri, 21 Jan 2011 19:23:58 GMT"],"Etag":["\"8763d4bc5700e1aa36cd5212da8eedf7\""],"X-Oauth-Scopes":["user, public_repo, repo, gist"],"X-Accepted-Oauth-Scopes":["repo, repo:status, repo:deployment, public_repo, delete_repo, user, user:email, user:follow, admin:org, write:org, read:org, gist, site_admin, user:assets, user:assets:read"],"Vary":["Accept, Authorization, Cookie, X-GitHub-OTP","Accept-Encoding"],"X-Github-Media-Type":["github.v3; format=json"],"X-Content-Type-Options":["nosniff"],"Access-Control-Allow-Credentials":["true"],"Access-Control-Expose-Headers":["ETag, Link, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval"],"Access-Control-Allow-Origin":["*"],"X-Github-Request-Id":["443FDC73:036A:107EAA9:52D3BE70"]},"body":{"encoding":"UTF-8","string":"{\"sha\":\"3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"commit\":{\"author\":{\"name\":\"toby cabot\",\"email\":\"toby@caboteria.org\",\"date\":\"2011-01-21T19:23:58Z\"},\"committer\":{\"name\":\"toby cabot\",\"email\":\"toby@caboteria.org\",\"date\":\"2011-01-21T19:23:58Z\"},\"message\":\"Merge branch '3pp_history'\",\"tree\":{\"sha\":\"53b3d8ade2ae5721e10bcd643a83e6b01c06462c\",\"url\":\"https://api.github.com/repos/sferik/rails_admin/git/trees/53b3d8ade2ae5721e10bcd643a83e6b01c06462c\"},\"url\":\"https://api.github.com/repos/sferik/rails_admin/git/commits/3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"comment_count\":0},\"url\":\"https://api.github.com/repos/sferik/rails_admin/commits/3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"html_url\":\"https://github.com/sferik/rails_admin/commit/3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"comments_url\":\"https://api.github.com/repos/sferik/rails_admin/commits/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/comments\",\"author\":{\"login\":\"caboteria\",\"id\":85106,\"avatar_url\":\"https://gravatar.com/avatar/e381ef5e90b6ed2bd5082a9a463cea3b?d=https%3A%2F%2Fidenticons.github.com%2F55227490325309e34291c4cc92204a69.png&r=x\",\"gravatar_id\":\"e381ef5e90b6ed2bd5082a9a463cea3b\",\"url\":\"https://api.github.com/users/caboteria\",\"html_url\":\"https://github.com/caboteria\",\"followers_url\":\"https://api.github.com/users/caboteria/followers\",\"following_url\":\"https://api.github.com/users/caboteria/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/caboteria/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/caboteria/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/caboteria/subscriptions\",\"organizations_url\":\"https://api.github.com/users/caboteria/orgs\",\"repos_url\":\"https://api.github.com/users/caboteria/repos\",\"events_url\":\"https://api.github.com/users/caboteria/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/caboteria/received_events\",\"type\":\"User\",\"site_admin\":false},\"committer\":{\"login\":\"caboteria\",\"id\":85106,\"avatar_url\":\"https://gravatar.com/avatar/e381ef5e90b6ed2bd5082a9a463cea3b?d=https%3A%2F%2Fidenticons.github.com%2F55227490325309e34291c4cc92204a69.png&r=x\",\"gravatar_id\":\"e381ef5e90b6ed2bd5082a9a463cea3b\",\"url\":\"https://api.github.com/users/caboteria\",\"html_url\":\"https://github.com/caboteria\",\"followers_url\":\"https://api.github.com/users/caboteria/followers\",\"following_url\":\"https://api.github.com/users/caboteria/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/caboteria/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/caboteria/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/caboteria/subscriptions\",\"organizations_url\":\"https://api.github.com/users/caboteria/orgs\",\"repos_url\":\"https://api.github.com/users/caboteria/repos\",\"events_url\":\"https://api.github.com/users/caboteria/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/caboteria/received_events\",\"type\":\"User\",\"site_admin\":false},\"parents\":[{\"sha\":\"a865e72344359f766b3ab03d3075c65798719ddd\",\"url\":\"https://api.github.com/repos/sferik/rails_admin/commits/a865e72344359f766b3ab03d3075c65798719ddd\",\"html_url\":\"https://github.com/sferik/rails_admin/commit/a865e72344359f766b3ab03d3075c65798719ddd\"},{\"sha\":\"a0857d80960ad9ac543e1d2d38f23b04634f0109\",\"url\":\"https://api.github.com/repos/sferik/rails_admin/commits/a0857d80960ad9ac543e1d2d38f23b04634f0109\",\"html_url\":\"https://github.com/sferik/rails_admin/commit/a0857d80960ad9ac543e1d2d38f23b04634f0109\"}],\"stats\":{\"total\":648,\"additions\":329,\"deletions\":319},\"files\":[{\"sha\":\"2247b418ad5d89ae7c4c7fd8be04098c90111fb2\",\"filename\":\"app/controllers/rails_admin/application_controller.rb\",\"status\":\"modified\",\"additions\":18,\"deletions\":0,\"changes\":18,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/controllers/rails_admin/application_controller.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/controllers/rails_admin/application_controller.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/controllers/rails_admin/application_controller.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -8,6 +8,24 @@ class ApplicationController < ::ApplicationController\\n \\n     helper_method :_current_user\\n \\n+    def get_model\\n+      model_name = to_model_name(params[:model_name])\\n+      @abstract_model = RailsAdmin::AbstractModel.new(model_name)\\n+      @model_config = RailsAdmin.config(@abstract_model)\\n+      not_found if @model_config.excluded?\\n+      @properties = @abstract_model.properties\\n+    end\\n+\\n+    def to_model_name(param)\\n+      param.split(\\\"::\\\").map{|x| x.singularize.camelize}.join(\\\"::\\\")\\n+    end\\n+\\n+    def get_object\\n+      @object = @abstract_model.get(params[:id])\\n+      @model_config.bind(:object, @object)\\n+      not_found unless @object\\n+    end\\n+\\n     private\\n \\n     def _authenticate!\"},{\"sha\":\"11de53eed701b5c92635aa2f8d9c84150d746dd0\",\"filename\":\"app/controllers/rails_admin/history_controller.rb\",\"status\":\"modified\",\"additions\":35,\"deletions\":1,\"changes\":36,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/controllers/rails_admin/history_controller.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/controllers/rails_admin/history_controller.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/controllers/rails_admin/history_controller.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -1,12 +1,46 @@\\n module RailsAdmin\\n   class HistoryController < RailsAdmin::ApplicationController\\n+    before_filter :get_model, :except => [:list, :slider]\\n+    before_filter :get_object, :except => [:list, :slider, :for_model]\\n+\\n     def list\\n       if params[:ref].nil? or params[:section].nil?\\n         not_found\\n       else\\n-        @history, @current_month = History.get_history_for_month(params[:ref], params[:section])\\n+        @history, @current_month = AbstractHistory.history_for_month(params[:ref], params[:section])\\n         render :template => 'rails_admin/main/history', :layout => false\\n       end\\n     end\\n+\\n+    def slider\\n+      ref = params[:ref].to_i\\n+\\n+      if ref.nil? or ref > 0\\n+        not_found\\n+      else\\n+        render :json => AbstractHistory.history_summaries(ref)\\n+      end\\n+    end\\n+\\n+    def for_model\\n+      @page_type = @abstract_model.pretty_name.downcase\\n+      @page_name = t(\\\"admin.history.page_name\\\", :name => @model_config.list.label)\\n+      @general = true\\n+\\n+      @page_count, @history = AbstractHistory.history_for_model @abstract_model, params[:query], params[:sort], params[:sort_reverse], params[:all], params[:page]\\n+\\n+      render \\\"show\\\", :layout => request.xhr? ? false : 'rails_admin/list'\\n+    end\\n+\\n+    def for_object\\n+      @page_type = @abstract_model.pretty_name.downcase\\n+      @page_name = t(\\\"admin.history.page_name\\\", :name => @model_config.bind(:object, @object).list.object_label)\\n+      @general = false\\n+\\n+      @history = AbstractHistory.history_for_object @abstract_model, @object, params[:query], params[:sort], params[:sort_reverse]\\n+\\n+      render \\\"show\\\", :layout => request.xhr? ? false : 'rails_admin/list'\\n+    end\\n+\\n   end\\n end\"},{\"sha\":\"76b116a526af516163b108d25df959f685032b53\",\"filename\":\"app/controllers/rails_admin/main_controller.rb\",\"status\":\"modified\",\"additions\":10,\"deletions\":162,\"changes\":172,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/controllers/rails_admin/main_controller.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/controllers/rails_admin/main_controller.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/controllers/rails_admin/main_controller.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -1,6 +1,6 @@\\n module RailsAdmin\\n   class MainController < RailsAdmin::ApplicationController\\n-    before_filter :get_model, :except => [:index, :history, :get_history]\\n+    before_filter :get_model, :except => [:index]\\n     before_filter :get_object, :only => [:edit, :update, :delete, :destroy]\\n     before_filter :get_bulk_objects, :only => [:bulk_delete, :bulk_destroy]\\n     before_filter :get_attributes, :only => [:create, :update]\\n@@ -10,18 +10,20 @@ def index\\n       @page_name = t(\\\"admin.dashboard.pagename\\\")\\n       @page_type = \\\"dashboard\\\"\\n \\n-      @history = History.latest\\n+      @history = AbstractHistory.history_latest_summaries\\n       # history listing with ref = 0 and section = 4\\n-      @historyListing, @current_month = History.get_history_for_month(0, 4)\\n+      @historyListing, @current_month = AbstractHistory.history_for_month(0, 4)\\n \\n       @abstract_models = RailsAdmin::AbstractModel.all\\n \\n+      @most_recent_changes = {}\\n       @count = {}\\n       @max = 0\\n       @abstract_models.each do |t|\\n         current_count = t.count\\n         @max = current_count > @max ? current_count : @max\\n         @count[t.pretty_name] = current_count\\n+        @most_recent_changes[t.pretty_name] = AbstractHistory.most_recent_history(t.pretty_name).last.try(:updated_at)\\n       end\\n \\n       render :layout => 'rails_admin/dashboard'\\n@@ -53,6 +55,7 @@ def create\\n       @page_type = @abstract_model.pretty_name.downcase\\n \\n       if @object.save && update_all_associations\\n+        AbstractHistory.create_history_item(\\\"Created #{@model_config.bind(:object, @object).list.object_label}\\\", @object, @abstract_model, _current_user)\\n         redirect_to_on_success\\n       else\\n         render_error\\n@@ -76,6 +79,7 @@ def update\\n \\n       @object.send :attributes=, @attributes, false\\n       if @object.save && update_all_associations\\n+        AbstractHistory.create_update_history @abstract_model, @object, @cached_assocations_hash, associations_hash, @modified_assoc, @old_object, _current_user\\n         redirect_to_on_success\\n       else\\n         render_error :edit\\n@@ -93,11 +97,11 @@ def destroy\\n       @object = @object.destroy\\n       flash[:notice] = t(\\\"admin.delete.flash_confirmation\\\", :name => @model_config.list.label)\\n \\n-      check_history\\n+      AbstractHistory.create_history_item(\\\"Destroyed #{@model_config.bind(:object, @object).list.object_label}\\\", @object, @abstract_model, _current_user)\\n \\n       redirect_to rails_admin_list_path(:model_name => @abstract_model.to_param)\\n     end\\n-    \\n+\\n     def bulk_delete\\n       @page_name = t(\\\"admin.actions.delete\\\").capitalize + \\\" \\\" + @model_config.list.label.downcase\\n       @page_type = @abstract_model.pretty_name.downcase\\n@@ -110,82 +114,12 @@ def bulk_destroy\\n \\n       @destroyed_objects.each do |object|\\n         message = \\\"Destroyed #{@model_config.bind(:object, object).list.object_label}\\\"\\n-        create_history_item(message, object, @abstract_model)\\n+        AbstractHistory.create_history_item(message, object, @abstract_model, _current_user)\\n       end\\n \\n       redirect_to rails_admin_list_path(:model_name => @abstract_model.to_param)\\n     end\\n \\n-    def history\\n-      ref = params[:ref].to_i\\n-\\n-      if ref.nil? or ref > 0\\n-        not_found\\n-      else\\n-        current_diff = -5 * ref\\n-        start_month = (5 + current_diff).month.ago.month\\n-        start_year = (5 + current_diff).month.ago.year\\n-        stop_month = (current_diff).month.ago.month\\n-        stop_year = (current_diff).month.ago.year\\n-\\n-        render :json => History.get_history_for_dates(start_month, stop_month, start_year, stop_year)\\n-      end\\n-    end\\n-\\n-    def get_history\\n-      if params[:ref].nil? or params[:section].nil?\\n-        not_found\\n-      else\\n-        @history, @current_month = History.get_history_for_month(params[:ref], params[:section])\\n-        render :template => 'rails_admin/main/history'\\n-      end\\n-    end\\n-\\n-    def show_history\\n-      @page_type = @abstract_model.pretty_name.downcase\\n-      @page_name = t(\\\"admin.history.page_name\\\", :name => @model_config.list.label)\\n-      @general = true\\n-\\n-      options = {}\\n-      options[:order] = \\\"created_at DESC\\\"\\n-      options[:conditions] = []\\n-      options[:conditions] << conditions = \\\"#{History.connection.quote_column_name(:table)} = ?\\\"\\n-      options[:conditions] << @abstract_model.pretty_name\\n-\\n-      if params[:id]\\n-        get_object\\n-        @page_name = t(\\\"admin.history.page_name\\\", :name => @model_config.bind(:object, @object).list.object_label)\\n-        options[:conditions][0] += \\\" and #{History.connection.quote_column_name(:item)} = ?\\\"\\n-        options[:conditions] << params[:id]\\n-        @general = false\\n-      end\\n-\\n-      if params[:query]\\n-        options[:conditions][0] += \\\" and (#{History.connection.quote_column_name(:message)} LIKE ? or #{History.connection.quote_column_name(:username)} LIKE ?)\\\"\\n-        options[:conditions] << \\\"%#{params[\\\"query\\\"]}%\\\"\\n-        options[:conditions] << \\\"%#{params[\\\"query\\\"]}%\\\"\\n-      end\\n-\\n-      if params[\\\"sort\\\"]\\n-        options.delete(:order)\\n-        if params[\\\"sort_reverse\\\"] == \\\"true\\\"\\n-          options[:order] = \\\"#{params[\\\"sort\\\"]} desc\\\"\\n-        else\\n-          options[:order] = params[\\\"sort\\\"]\\n-        end\\n-      end\\n-\\n-      @history = History.find(:all, options)\\n-\\n-      if @general and not params[:all]\\n-        @current_page = (params[:page] || 1).to_i\\n-        options.merge!(:page => @current_page, :per_page => 20)\\n-        @page_count, @history = History.paginated(options)\\n-      end\\n-\\n-      render :layout => request.xhr? ? false : 'rails_admin/list'\\n-    end\\n-\\n     def handle_error(e)\\n       if RailsAdmin::AuthenticationNotConfigured === e\\n         Rails.logger.error e.message\\n@@ -200,20 +134,6 @@ def handle_error(e)\\n \\n     private\\n \\n-    def get_model\\n-      model_name = to_model_name(params[:model_name])\\n-      @abstract_model = RailsAdmin::AbstractModel.new(model_name)\\n-      @model_config = RailsAdmin.config(@abstract_model)\\n-      not_found if @model_config.excluded?\\n-      @properties = @abstract_model.properties\\n-    end\\n-\\n-    def get_object\\n-      @object = @abstract_model.get(params[:id])\\n-      @model_config.bind(:object, @object)\\n-      not_found unless @object\\n-    end\\n-    \\n     def get_bulk_objects\\n       @bulk_ids = params[:bulk_ids]\\n       @bulk_objects = @abstract_model.get_bulk(@bulk_ids)\\n@@ -317,8 +237,6 @@ def redirect_to_on_success\\n       pretty_name = @model_config.update.label\\n       action = params[:action]\\n \\n-      check_history\\n-\\n       if params[:_add_another]\\n         flash[:notice] = t(\\\"admin.flash.successful\\\", :name => pretty_name, :action => t(\\\"admin.actions.#{action}d\\\"))\\n         redirect_to rails_admin_new_path(:model_name => param)\\n@@ -331,82 +249,12 @@ def redirect_to_on_success\\n       end\\n     end\\n \\n-    # TODO: Move this logic to the History class?\\n-    def check_history\\n-      action = params[:action]\\n-      message = []\\n-\\n-      case action\\n-      when \\\"create\\\"\\n-        message << \\\"#{action.capitalize}d #{@model_config.bind(:object, @object).list.object_label}\\\"\\n-      when \\\"update\\\"\\n-        # determine which fields changed ???\\n-        changed_property_list = []\\n-        @properties = @abstract_model.properties.reject{|property| RailsAdmin::History::IGNORED_ATTRS.include?(property[:name])}\\n-\\n-        @properties.each do |property|\\n-          property_name = property[:name].to_param\\n-          if @old_object.send(property_name) != @object.send(property_name)\\n-            changed_property_list << property_name\\n-          end\\n-        end\\n-\\n-        @abstract_model.associations.each do |t|\\n-          assoc = changed_property_list.index(t[:child_key].to_param)\\n-          if assoc\\n-            changed_property_list[assoc] = \\\"associated #{t[:pretty_name]}\\\"\\n-          end\\n-        end\\n-\\n-        # Determine if any associations were added or removed\\n-        associations_hash.each do |key, current|\\n-          removed_ids = (@cached_assocations_hash[key] - current).map{|m| '#' + m.to_s}\\n-          added_ids = (current - @cached_assocations_hash[key]).map{|m| '#' + m.to_s}\\n-          if removed_ids.any?\\n-            message << \\\"Removed #{key.to_s.capitalize} #{removed_ids.join(', ')} associations\\\"\\n-          end\\n-          if added_ids.any?\\n-            message << \\\"Added #{key.to_s.capitalize} #{added_ids.join(', ')} associations\\\"\\n-          end\\n-        end\\n-\\n-        @modified_assoc.uniq.each do |t|\\n-          changed_property_list << \\\"associated #{t}\\\"\\n-        end\\n-\\n-        if not changed_property_list.empty?\\n-          message << \\\"Changed #{changed_property_list.join(\\\", \\\")}\\\"\\n-        end\\n-      when \\\"destroy\\\"\\n-        message << \\\"Destroyed #{@model_config.bind(:object, @object).list.object_label}\\\"\\n-      end\\n-\\n-      create_history_item(message, @object, @abstract_model) unless message.empty?\\n-    end\\n-\\n-    def create_history_item(message, object, abstract_model)\\n-      message = message.join(', ') if message.is_a? Array\\n-      date = Time.now\\n-      History.create(\\n-        :message => message,\\n-        :item => object.id,\\n-        :table => abstract_model.pretty_name,\\n-        :username => _current_user ? _current_user.email : \\\"\\\",\\n-        :month => date.month,\\n-        :year => date.year\\n-      )\\n-    end\\n-\\n     def render_error whereto = :new\\n       action = params[:action]\\n       flash.now[:error] = t(\\\"admin.flash.error\\\", :name => @model_config.update.label, :action => t(\\\"admin.actions.#{action}d\\\"))\\n       render whereto, :layout => 'rails_admin/form'\\n     end\\n \\n-    def to_model_name(param)\\n-      param.split(\\\"::\\\").map{|x| x.singularize.camelize}.join(\\\"::\\\")\\n-    end\\n-\\n     def check_for_cancel\\n       if params[:_continue]\\n         flash[:notice] = t(\\\"admin.flash.noaction\\\")\"},{\"sha\":\"08657b55a2c5fea6e0b2fb0d248409024ddc5c69\",\"filename\":\"app/helpers/rails_admin/application_helper.rb\",\"status\":\"modified\",\"additions\":104,\"deletions\":0,\"changes\":104,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/helpers/rails_admin/application_helper.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/helpers/rails_admin/application_helper.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/helpers/rails_admin/application_helper.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -7,5 +7,109 @@ def history_output(t)\\n         return t.message.downcase\\n       end\\n     end\\n+\\n+    # Given a page count and the current page, we generate a set of pagination\\n+    # links.\\n+    #\\n+    # * We use an inner and outer window into a list of links. For a set of\\n+    # 20 pages with the current page being 10:\\n+    # outer_window:\\n+    #   1 2 ..... 19 20\\n+    # inner_window\\n+    #   5 6 7 8 9 10 11 12 13 14\\n+    #\\n+    # This is totally adjustable, or can be turned off by giving the\\n+    # :inner_window setting a value of nil.\\n+    #\\n+    # * Options\\n+    # :left_cut_label => <em>text_for_cut</em>::\\n+    #    Used when the page numbers need to be cut off to prevent the set of\\n+    #    pagination links from being too long.\\n+    #    Defaults to '&hellip;'\\n+    # :right_cut_label => <em>text_for_cut</em>::\\n+    #    Same as :left_cut_label but for the right side of numbers.\\n+    #    Defaults to '&hellip;'\\n+    # :outer_window => <em>number_of_pages</em>::\\n+    #    Sets the number of pages to include in the outer 'window'\\n+    #    Defaults to 2\\n+    # :inner_window => <em>number_of_pages</em>::\\n+    #    Sets the number of pags to include in the inner 'window'\\n+    #    Defaults to 7\\n+    # :page_param => <em>name_of_page_paramiter</em>\\n+    #    Sets the name of the paramiter the paginator uses to return what\\n+    #    page is being requested.\\n+    #    Defaults to 'page'\\n+    # :url => <em>url_for_links</em>\\n+    #    Provides the base url to use in the page navigation links.\\n+    #    Defaults to ''\\n+    def paginate(current_page, page_count, options = {})\\n+      options[:left_cut_label] ||= '&hellip;'\\n+      options[:right_cut_label] ||= '&hellip;'\\n+      options[:outer_window] ||= 2\\n+      options[:inner_window] ||= 7\\n+      options[:page_param] ||= 'page'\\n+      options[:url] ||= \\\"\\\"\\n+\\n+      url = options.delete(:url)\\n+      url = url.to_a.collect{|x| x.join(\\\"=\\\")}.join(\\\"&\\\")\\n+\\n+      url += (url.include?('=') ? '&' : '') + options[:page_param]\\n+      url = \\\"?\\\"+url\\n+\\n+      pages = {\\n+        :all => (1..page_count).to_a,\\n+        :left => [],\\n+        :center => [],\\n+        :right => []\\n+      }\\n+\\n+      # Only worry about using our 'windows' if the page count is less then\\n+      # our windows combined.\\n+      if options[:inner_window].nil? || ((options[:outer_window] * 2) + options[:inner_window] + 2) >= page_count\\n+        pages[:center] = pages[:all]\\n+      else\\n+        pages[:left] = pages[:all][0, options[:outer_window]]\\n+        pages[:right] = pages[:all][page_count - options[:outer_window], options[:outer_window]]\\n+        pages[:center] = case current_page\\n+        # allow the inner 'window' to shift to right when close to the left edge\\n+        # Ex: 1 2 [3] 4 5 6 7 8 9 ... 20\\n+        when -infinity .. (options[:inner_window] / 2) + 3\\n+          pages[:all][options[:outer_window], options[:inner_window]] +\\n+            [options[:right_cut_label]]\\n+        # allow the inner 'window' to shift left when close to the right edge\\n+        # Ex: 1 2 ... 12 13 14 15 16 [17] 18 19 20\\n+        when (page_count - (options[:inner_window] / 2.0).ceil) - 1 .. infinity\\n+          [options[:left_cut_label]] +\\n+            pages[:all][page_count - options[:inner_window] - options[:outer_window], options[:inner_window]]\\n+        # Display the unshifed window\\n+        # ex: 1 2 ... 5 6 7 [8] 9 10 11 ... 19 20\\n+        else\\n+          [options[:left_cut_label]] +\\n+            pages[:all][current_page - (options[:inner_window] / 2) - 1, options[:inner_window]] +\\n+            [options[:right_cut_label]]\\n+        end\\n+      end\\n+\\n+      b = []\\n+\\n+      [pages[:left], pages[:center], pages[:right]].each do |p|\\n+        p.each do |page_number|\\n+\\n+          case page_number\\n+          when String\\n+            b << page_number\\n+          when current_page\\n+            b << Builder::XmlMarkup.new.span(page_number, :class => \\\"this-page\\\")\\n+          when page_count\\n+            b << Builder::XmlMarkup.new.a(page_number, :class => \\\"end\\\", :href => \\\"#{url}=#{page_number}\\\")\\n+          else\\n+            b << Builder::XmlMarkup.new.a(page_number, :href => \\\"#{url}=#{page_number}\\\")\\n+          end\\n+        end\\n+      end\\n+\\n+      b.join(\\\" \\\")\\n+    end\\n+\\n   end\\n end\"},{\"sha\":\"fce052c16be425e6caed6dde01a80aaf400beab4\",\"filename\":\"app/helpers/rails_admin/main_helper.rb\",\"status\":\"modified\",\"additions\":0,\"deletions\":103,\"changes\":103,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/helpers/rails_admin/main_helper.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/helpers/rails_admin/main_helper.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/helpers/rails_admin/main_helper.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -21,109 +21,6 @@ def get_column_set(properties)\\n       return style, other, selected_set\\n     end\\n \\n-    # Given a page count and the current page, we generate a set of pagination\\n-    # links.\\n-    #\\n-    # * We use an inner and outer window into a list of links. For a set of\\n-    # 20 pages with the current page being 10:\\n-    # outer_window:\\n-    #   1 2 ..... 19 20\\n-    # inner_window\\n-    #   5 6 7 8 9 10 11 12 13 14\\n-    #\\n-    # This is totally adjustable, or can be turned off by giving the\\n-    # :inner_window setting a value of nil.\\n-    #\\n-    # * Options\\n-    # :left_cut_label => <em>text_for_cut</em>::\\n-    #    Used when the page numbers need to be cut off to prevent the set of\\n-    #    pagination links from being too long.\\n-    #    Defaults to '&hellip;'\\n-    # :right_cut_label => <em>text_for_cut</em>::\\n-    #    Same as :left_cut_label but for the right side of numbers.\\n-    #    Defaults to '&hellip;'\\n-    # :outer_window => <em>number_of_pages</em>::\\n-    #    Sets the number of pages to include in the outer 'window'\\n-    #    Defaults to 2\\n-    # :inner_window => <em>number_of_pages</em>::\\n-    #    Sets the number of pags to include in the inner 'window'\\n-    #    Defaults to 7\\n-    # :page_param => <em>name_of_page_paramiter</em>\\n-    #    Sets the name of the paramiter the paginator uses to return what\\n-    #    page is being requested.\\n-    #    Defaults to 'page'\\n-    # :url => <em>url_for_links</em>\\n-    #    Provides the base url to use in the page navigation links.\\n-    #    Defaults to ''\\n-    def paginate(current_page, page_count, options = {})\\n-      options[:left_cut_label] ||= '&hellip;'\\n-      options[:right_cut_label] ||= '&hellip;'\\n-      options[:outer_window] ||= 2\\n-      options[:inner_window] ||= 7\\n-      options[:page_param] ||= 'page'\\n-      options[:url] ||= \\\"\\\"\\n-\\n-      url = options.delete(:url)\\n-      url = url.to_a.collect{|x| x.join(\\\"=\\\")}.join(\\\"&\\\")\\n-\\n-      url += (url.include?('=') ? '&' : '') + options[:page_param]\\n-      url = \\\"?\\\"+url\\n-\\n-      pages = {\\n-        :all => (1..page_count).to_a,\\n-        :left => [],\\n-        :center => [],\\n-        :right => []\\n-      }\\n-\\n-      # Only worry about using our 'windows' if the page count is less then\\n-      # our windows combined.\\n-      if options[:inner_window].nil? || ((options[:outer_window] * 2) + options[:inner_window] + 2) >= page_count\\n-        pages[:center] = pages[:all]\\n-      else\\n-        pages[:left] = pages[:all][0, options[:outer_window]]\\n-        pages[:right] = pages[:all][page_count - options[:outer_window], options[:outer_window]]\\n-        pages[:center] = case current_page\\n-        # allow the inner 'window' to shift to right when close to the left edge\\n-        # Ex: 1 2 [3] 4 5 6 7 8 9 ... 20\\n-        when -infinity .. (options[:inner_window] / 2) + 3\\n-          pages[:all][options[:outer_window], options[:inner_window]] +\\n-            [options[:right_cut_label]]\\n-        # allow the inner 'window' to shift left when close to the right edge\\n-        # Ex: 1 2 ... 12 13 14 15 16 [17] 18 19 20\\n-        when (page_count - (options[:inner_window] / 2.0).ceil) - 1 .. infinity\\n-          [options[:left_cut_label]] +\\n-            pages[:all][page_count - options[:inner_window] - options[:outer_window], options[:inner_window]]\\n-        # Display the unshifed window\\n-        # ex: 1 2 ... 5 6 7 [8] 9 10 11 ... 19 20\\n-        else\\n-          [options[:left_cut_label]] +\\n-            pages[:all][current_page - (options[:inner_window] / 2) - 1, options[:inner_window]] +\\n-            [options[:right_cut_label]]\\n-        end\\n-      end\\n-\\n-      b = []\\n-\\n-      [pages[:left], pages[:center], pages[:right]].each do |p|\\n-        p.each do |page_number|\\n-\\n-          case page_number\\n-          when String\\n-            b << page_number\\n-          when current_page\\n-            b << Builder::XmlMarkup.new.span(page_number, :class => \\\"this-page\\\")\\n-          when page_count\\n-            b << Builder::XmlMarkup.new.a(page_number, :class => \\\"end\\\", :href => \\\"#{url}=#{page_number}\\\")\\n-          else\\n-            b << Builder::XmlMarkup.new.a(page_number, :href => \\\"#{url}=#{page_number}\\\")\\n-          end\\n-        end\\n-      end\\n-\\n-      b.join(\\\" \\\")\\n-    end\\n-\\n     private\\n \\n     def infinity\"},{\"sha\":\"f3f72c82a83be64a167dd07ef62087cc8c6f23dd\",\"filename\":\"app/models/rails_admin/blank_history.rb\",\"status\":\"modified\",\"additions\":6,\"deletions\":0,\"changes\":6,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/models/rails_admin/blank_history.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/models/rails_admin/blank_history.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/models/rails_admin/blank_history.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -6,5 +6,11 @@ def initialize(month, year)\\n       @month = month\\n       @year = year\\n     end\\n+\\n+    # Make BlankHistory look like History when it gets JSON-serialized.\\n+    def to_hash(*a)\\n+      {\\\"history\\\" => {\\\"number\\\" => @number, \\\"month\\\" => @month, \\\"year\\\" => @year}}\\n+    end\\n+\\n   end\\n end\"},{\"sha\":\"c872970da7c7d27f94e6821ee6c70b4dad416db9\",\"filename\":\"app/models/rails_admin/history.rb\",\"status\":\"modified\",\"additions\":0,\"deletions\":34,\"changes\":34,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/models/rails_admin/history.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/models/rails_admin/history.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/models/rails_admin/history.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -7,31 +7,6 @@ class History < ActiveRecord::Base\\n       where(\\\"#{retrieve_connection.quote_column_name(:table)} = ?\\\", table).order(\\\"updated_at\\\")\\n     }\\n \\n-    def self.paginated(options = {})\\n-      page = options.delete(:page) || 1\\n-      per_page = options.delete(:per_page) || RailsAdmin[:per_page]\\n-\\n-      page_count = (count(options).to_f / per_page).ceil\\n-\\n-      options.merge!({\\n-        :limit => per_page,\\n-        :offset => (page - 1) * per_page\\n-      })\\n-\\n-      [page_count, all(options)]\\n-    end\\n-\\n-    def self.latest\\n-      mstart = 5.month.ago.month\\n-      mstop = Time.now.month\\n-\\n-      ystop = Time.now.year\\n-      ystart = 5.month.ago.year\\n-\\n-      self.get_history_for_dates(mstart, mstop, ystart, ystop)\\n-    end\\n-\\n-\\n     def self.get_history_for_dates(mstart, mstop, ystart, ystop)\\n       sql_in = \\\"\\\"\\n       if mstart > mstop\\n@@ -65,14 +40,5 @@ def self.add_blank_results(results, mstart, ystart)\\n         end\\n       end\\n     end\\n-\\n-    def self.get_history_for_month(ref, section)\\n-      current_ref = -5 * ref.to_i\\n-      current_diff = current_ref + 5 - (section.to_i + 1)\\n-\\n-      current_month = current_diff.month.ago\\n-\\n-      return History.find(:all, :conditions => [\\\"month = ? and year = ?\\\", current_month.month, current_month.year]), current_month\\n-    end\\n   end\\n end\"},{\"sha\":\"3bd75ba005ee5e9f90436d37f4becff6c35b9c60\",\"filename\":\"app/views/rails_admin/history/show.html.erb\",\"status\":\"renamed\",\"additions\":3,\"deletions\":1,\"changes\":4,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/views/rails_admin/history/show.html.erb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/views/rails_admin/history/show.html.erb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/views/rails_admin/history/show.html.erb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -65,13 +65,15 @@\\n               <td class=\\\"smallString\\\">\\n                 <%= object.username %>\\n               </td>\\n+              <% if @general %>\\n               <td class=\\\"int\\\">\\n                 <% unless object.message.match(\\\"Destroy\\\") %>\\n-                <%= link_to object.item, rails_admin_show_history_path(:id => object.item), :class => \\\"historyLink\\\"%>\\n+                <%= link_to object.item, rails_admin_history_object_path(:id => object.item), :class => \\\"historyLink\\\"%>\\n                 <% else %>\\n                 <%= object.item %>\\n                 <% end %>\\n               </td>\\n+              <% end %>\\n               <td class=\\\"smallString\\\">\\n                 <%= object.message %>\\n               </td>\"},{\"sha\":\"f93400f209a178eeb25b51ade4f32146672b5244\",\"filename\":\"app/views/rails_admin/main/edit.html.erb\",\"status\":\"modified\",\"additions\":1,\"deletions\":1,\"changes\":2,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/views/rails_admin/main/edit.html.erb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/views/rails_admin/main/edit.html.erb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/views/rails_admin/main/edit.html.erb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -4,7 +4,7 @@\\n           <ul id=\\\"quick\\\">\\n             <!--<li><a href=\\\"#\\\">Quick add</a></li>-->\\n             <li>\\n-             <%= link_to(t(\\\"admin.history.name\\\"), rails_admin_show_history_path(:id => params[:id]), :class => \\\"addlink\\\") %>\\n+             <%= link_to(t(\\\"admin.history.name\\\"), rails_admin_history_object_path(:id => params[:id]), :class => \\\"addlink\\\") %>\\n             </li>\\n           </ul>\\n           <a href=\\\"<%= rails_admin_delete_path(:model_name => @abstract_model.to_param, :id => params[:id]) %>\\\" id=\\\"deleteItem\\\"><img src=\\\"/images/rails_admin/cross.png\\\" alt=\\\"Delete\\\"><%= t(\\\"admin.list.delete_action\\\") %></a>\"},{\"sha\":\"f788dbce503d1fdf129cfc71919483457319a1c4\",\"filename\":\"app/views/rails_admin/main/index.html.erb\",\"status\":\"modified\",\"additions\":1,\"deletions\":5,\"changes\":6,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/views/rails_admin/main/index.html.erb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/views/rails_admin/main/index.html.erb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/views/rails_admin/main/index.html.erb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -19,7 +19,7 @@\\n                   <%= link_to(RailsAdmin.config(abstract_model).list.label, rails_admin_list_path(:model_name => abstract_model.to_param), :class => \\\"show\\\") %>\\n                 </td>\\n                 <td>\\n-                <% if (last_used = RailsAdmin::History.most_recent(abstract_model.pretty_name).last.try(:updated_at)) %>\\n+                <% if (last_used = @most_recent_changes[abstract_model.pretty_name]) %>\\n                 <%= time_ago_in_words last_used %> <%= t \\\"admin.dashboard.ago\\\" %>\\n                 <% end %>\\n                 </td>\\n@@ -53,11 +53,7 @@\\n                     <% month_names = t(\\\"date.month_names\\\", :locale => :en) if (month_names = t(\\\"date.month_names\\\")) =~ /translation/ %>\\n                     <span><%= month_names[t.month] %> <%= t.year %></span>\\n                     <span class=\\\"bars\\\">\\n-                      <% if t.number == 0 %>\\n-                      <br/><%= t(\\\"admin.history.no_activity\\\") %>\\n-                      <% else %>\\n                       <span class=\\\"indicator <%= indicator_type %>\\\" style=\\\"height:<%= percent %>%\\\"></span>\\n-                      <% end %>\\n                     </span>\\n                   </li>\\n                   <% end %>\"},{\"sha\":\"da909989f6e2a7a5eddabb82711346f408893335\",\"filename\":\"app/views/rails_admin/main/list.html.erb\",\"status\":\"modified\",\"additions\":1,\"deletions\":1,\"changes\":2,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/views/rails_admin/main/list.html.erb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/app/views/rails_admin/main/list.html.erb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/app/views/rails_admin/main/list.html.erb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -28,7 +28,7 @@\\n         <div id=\\\"quickAccess\\\">\\n           <ul id=\\\"quick\\\">\\n             <li>\\n-             <%= link_to(t(\\\"admin.history.name\\\"), rails_admin_show_history_path, :class => \\\"addlink\\\") %>\\n+             <%= link_to(t(\\\"admin.history.name\\\"), rails_admin_history_model_path, :class => \\\"addlink\\\") %>\\n             </li>\\n             <li>\\n              <%= link_to(t(\\\"admin.list.add_new\\\"), rails_admin_new_path(:model_name => @abstract_model.to_param), :class => \\\"addlink\\\") %>\"},{\"sha\":\"723f430b92a0eeb040222dfa25560d8d6edfc200\",\"filename\":\"config/routes.rb\",\"status\":\"modified\",\"additions\":3,\"deletions\":1,\"changes\":4,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/config/routes.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/config/routes.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/config/routes.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -8,7 +8,6 @@\\n       get \\\"/:model_name\\\", :to => :list, :as => \\\"list\\\"\\n       get \\\"/:model_name/new\\\", :to => :new, :as => \\\"new\\\"\\n       match \\\"/:model_name/get_pages\\\", :to => :get_pages, :as => \\\"get_pages\\\"\\n-      match \\\"/:model_name/history\\\", :to => :show_history, :as => \\\"show_history\\\"\\n       post \\\"/:model_name\\\", :to => :create, :as => \\\"create\\\"\\n       get \\\"/:model_name/:id/edit\\\", :to => :edit, :as => \\\"edit\\\"\\n       put \\\"/:model_name/:id\\\", :to => :update, :as => \\\"update\\\"\\n@@ -20,6 +19,9 @@\\n     scope \\\"history\\\", :as => \\\"history\\\" do\\n       controller \\\"history\\\" do\\n         match \\\"/list\\\", :to => :list, :as => \\\"list\\\"\\n+        match \\\"/slider\\\", :to => :slider, :as => \\\"slider\\\"\\n+        match \\\"/:model_name\\\", :to => :for_model, :as => \\\"model\\\"\\n+        match \\\"/:model_name/:id\\\", :to => :for_object, :as => \\\"object\\\"\\n       end\\n     end\\n   end\"},{\"sha\":\"d36b4ba90e5fd730a44170894208ae1c881e0371\",\"filename\":\"lib/rails_admin.rb\",\"status\":\"modified\",\"additions\":1,\"deletions\":0,\"changes\":1,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/lib/rails_admin.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/lib/rails_admin.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/lib/rails_admin.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -1,5 +1,6 @@\\n require 'rails_admin/engine'\\n require 'rails_admin/abstract_model'\\n+require 'rails_admin/abstract_history'\\n require 'rails_admin/config'\\n \\n module RailsAdmin\"},{\"sha\":\"91a97c8231d63aa73dac8f52c0e33ba77950566b\",\"filename\":\"lib/rails_admin/abstract_history.rb\",\"status\":\"added\",\"additions\":139,\"deletions\":0,\"changes\":139,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/lib/rails_admin/abstract_history.rb\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/lib/rails_admin/abstract_history.rb\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/lib/rails_admin/abstract_history.rb?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -0,0 +1,139 @@\\n+module RailsAdmin\\n+\\n+  # Rails Admin's history API.  All access to history data should go\\n+  # through this module so users can patch it to use other history/audit\\n+  # packages.\\n+  class AbstractHistory\\n+\\n+    # Create a history record for an update operation.\\n+    def self.create_update_history(model, object, associations_before, associations_after, modified_associations, old_object, user)\\n+      messages = []\\n+\\n+      # determine which fields changed ???\\n+      changed_property_list = []\\n+      properties = model.properties.reject{|property| RailsAdmin::History::IGNORED_ATTRS.include?(property[:name])}\\n+\\n+      properties.each do |property|\\n+        property_name = property[:name].to_param\\n+        if old_object.send(property_name) != object.send(property_name)\\n+          changed_property_list << property_name\\n+        end\\n+      end\\n+\\n+      model.associations.each do |t|\\n+        assoc = changed_property_list.index(t[:child_key].to_param)\\n+        if assoc\\n+          changed_property_list[assoc] = \\\"associated #{t[:pretty_name]}\\\"\\n+        end\\n+      end\\n+\\n+      # Determine if any associations were added or removed\\n+      associations_after.each do |key, current|\\n+        removed_ids = (associations_before[key] - current).map{|m| '#' + m.to_s}\\n+        added_ids = (current - associations_before[key]).map{|m| '#' + m.to_s}\\n+        if removed_ids.any?\\n+          messages << \\\"Removed #{key.to_s.capitalize} #{removed_ids.join(', ')} associations\\\"\\n+        end\\n+        if added_ids.any?\\n+          messages << \\\"Added #{key.to_s.capitalize} #{added_ids.join(', ')} associations\\\"\\n+        end\\n+      end\\n+\\n+      modified_associations.uniq.each do |t|\\n+        changed_property_list << \\\"associated #{t}\\\"\\n+      end\\n+\\n+      if not changed_property_list.empty?\\n+        messages << \\\"Changed #{changed_property_list.join(\\\", \\\")}\\\"\\n+      end\\n+\\n+      create_history_item(messages, object, model, user) unless messages.empty?\\n+    end\\n+\\n+    # Create a history item for any operation.\\n+    def self.create_history_item(message, object, abstract_model, user)\\n+      message = message.join(', ') if message.is_a? Array\\n+      date = Time.now\\n+      RailsAdmin::History.create(\\n+                                 :message => message,\\n+                                 :item => object.id,\\n+                                 :table => abstract_model.pretty_name,\\n+                                 :username => user ? user.email : \\\"\\\",\\n+                                 :month => date.month,\\n+                                 :year => date.year\\n+                                 )\\n+    end\\n+\\n+    # Fetch the history items for a model.  Returns an array containing\\n+    # the page count and an AR query result containing the history\\n+    # items.\\n+    def self.history_for_model(model, query, sort, sort_reverse, all, page = 1, per_page = 10 || RailsAdmin::Config::Sections::List.default_items_per_page)\\n+      history = History.where :table => model.pretty_name\\n+\\n+      if query\\n+        history = history.where \\\"#{History.connection.quote_column_name(:message)} LIKE ? OR #{History.connection.quote_column_name(:username)} LIKE ?\\\", \\\"%#{query}%\\\", \\\"%#{query}%\\\"\\n+      end\\n+\\n+      if sort\\n+        history = history.order(sort_reverse == \\\"true\\\" ? \\\"#{sort} DESC\\\" : sort)\\n+      end\\n+\\n+      if all\\n+        [1, history]\\n+      else\\n+        page_count = (history.count.to_f / per_page).ceil\\n+        [page_count, history.limit(per_page).offset((page.to_i - 1) * per_page)]\\n+      end\\n+    end\\n+\\n+    # Fetch the history items for a specific object instance.\\n+    def self.history_for_object(model, object, query, sort, sort_reverse)\\n+      history = History.where :table => model.pretty_name, :item => object.id\\n+\\n+      if query\\n+        history = history.where \\\"#{History.connection.quote_column_name(:message)} LIKE ? OR #{History.connection.quote_column_name(:username)} LIKE ?\\\", \\\"%#{query}%\\\", \\\"%#{query}%\\\"\\n+      end\\n+\\n+      if sort\\n+        history = history.order(sort_reverse == \\\"true\\\" ? \\\"#{sort} DESC\\\" : sort)\\n+      end\\n+\\n+      history\\n+    end\\n+\\n+    # Fetch the history item counts for a 5-month period.  Ref=0 ends at\\n+    # the present month, ref=-1 is the block before that, etc.\\n+    def self.history_summaries(ref)\\n+      current_diff = -5 * ref\\n+      start_month = (5 + current_diff).month.ago.month\\n+      start_year = (5 + current_diff).month.ago.year\\n+      stop_month = (current_diff).month.ago.month\\n+      stop_year = (current_diff).month.ago.year\\n+\\n+      RailsAdmin::History.get_history_for_dates(start_month, stop_month, start_year, stop_year)\\n+    end\\n+\\n+\\n+    # Fetch the history item counts for the most recent 5 months.\\n+    def self.history_latest_summaries\\n+      self.history_summaries(0)\\n+    end\\n+\\n+    # Fetch detailed history for one month.\\n+    def self.history_for_month(ref, section)\\n+      current_ref = -5 * ref.to_i\\n+      current_diff = current_ref + 5 - (section.to_i + 1)\\n+\\n+      current_month = current_diff.month.ago\\n+\\n+      return RailsAdmin::History.find(:all, :conditions => [\\\"month = ? and year = ?\\\", current_month.month, current_month.year]), current_month\\n+    end\\n+\\n+    # Fetch the most recent history item for a model.\\n+    def self.most_recent_history(name)\\n+      RailsAdmin::History.most_recent name\\n+    end\\n+\\n+  end\\n+\\n+end\"},{\"sha\":\"21fbeedd8d25a12284734f926da9d1e5af2c4a39\",\"filename\":\"public/javascripts/rails_admin/dashboard.js\",\"status\":\"modified\",\"additions\":7,\"deletions\":10,\"changes\":17,\"blob_url\":\"https://github.com/sferik/rails_admin/blob/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/public/javascripts/rails_admin/dashboard.js\",\"raw_url\":\"https://github.com/sferik/rails_admin/raw/3cdfabd973bc3caac209cba903cfdb3bf6636bcd/public/javascripts/rails_admin/dashboard.js\",\"contents_url\":\"https://api.github.com/repos/sferik/rails_admin/contents/public/javascripts/rails_admin/dashboard.js?ref=3cdfabd973bc3caac209cba903cfdb3bf6636bcd\",\"patch\":\"@@ -16,7 +16,7 @@ function get_indicator(percent){\\n function loadHistory(param){\\n   var ref = param;\\n \\n-  new Ajax.Request(\\\"/admin/history/list\\\", { method: 'post', parameters: { \\\"ref\\\": ref },\\n+  new Ajax.Request(\\\"/admin/history/slider\\\", { method: 'post', parameters: { \\\"ref\\\": ref },\\n   onSuccess: function(transport) {\\n \\n     var response = JSON.parse(transport.responseText)\\n@@ -24,12 +24,9 @@ function loadHistory(param){\\n     var max = response[4].history.number;\\n \\n     response.each(function(e){\\n-      if(e.fake != 1){\\n         if(e.history.number > max){\\n           max = e.history.number;\\n         }\\n-      }\\n-\\n     })\\n \\n     var index = 0;\\n@@ -39,17 +36,17 @@ function loadHistory(param){\\n \\n     $$(\\\"#timelineSlider ul li\\\").each(function(e){\\n \\n-      if(response[index].fake != 1){\\n+      var monthName = response[index].history.month;\\n+      var yearName = response[index].history.year;\\n+      var text = nameForMonths[monthName-1] + \\\" \\\" + yearName\\n+\\n+      if(response[index].history.number > 0){\\n         var percent = parseInt(response[index].history.number * 100 / max);\\n         var indicator = e.childElements()[1].childElements()[0];\\n         var setStyle = \\\"height: \\\"+percent+\\\"%; background:\\\"+get_indicator(percent);\\n-        var monthName = response[index].history.month;\\n-        var yearName = response[index].history.year;\\n-        var text = nameForMonths[monthName-1] + \\\" \\\" + yearName\\n       }else{\\n         var indicator = e.childElements()[1].childElements()[0];\\n-        var setStyle = \\\"height: 0%; background:\\\"+get_indicator(percent);\\n-        var text = \\\"No data\\\";\\n+        var setStyle = \\\"height: 0%; background:0\\\";\\n       }\\n \\n       var morphEffect = new Effect.Morph(indicator, {\"}]}"},"http_version":null},"recorded_at":"Mon, 13 Jan 2014 10:22:40 GMT"}],"recorded_with":"VCR 2.4.0"}