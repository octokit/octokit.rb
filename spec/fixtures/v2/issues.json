{
    "issues": [
        {
            "body": "Hi,\n\nI just tried to play with this in an app with no ActiveRecord.  I was disappointed.  It seems the only reason the engine relies on AR is to provide History functionality.  I would argue that having the History in a database, and therefore tying the app to AR & SQL, isn't worth it.  How about we change it to just dump to a CSV and remove the AR dep?\n\n$0.02", 
            "comments": 14, 
            "created_at": "2010/10/03 11:36:43 -0700", 
            "gravatar_id": "9bee19040f2a9c6a901e33426a968135", 
            "labels": [
                "@ml", 
                "enhancement"
            ], 
            "number": 105, 
            "position": 10.0, 
            "state": "open", 
            "title": "Use OrmAdapter instead of talking directly to ActiveRecord", 
            "updated_at": "2011/01/14 11:16:57 -0800", 
            "user": "ryana", 
            "votes": 5
        }, 
        {
            "body": "Hi\r\n\r\nI added AbstracObject class to replace direct ActiveRecord calls in the controller. I moved the code for creating, updating and destroying from the controller to this class. AbstractObject should be good place for something like https://github.com/ianwhite/orm_adapter. I think that moving everything related to the history from MainController to AbstracObject is also good idea. ", 
            "comments": 3, 
            "created_at": "2011/01/03 05:56:35 -0800", 
            "gravatar_id": "07fb1f108e968f7b8573307eefddd66f", 
            "labels": [], 
            "number": 220, 
            "position": 43.0, 
            "state": "open", 
            "title": "Abstract object", 
            "updated_at": "2011/01/06 07:14:22 -0800", 
            "user": "ml", 
            "votes": 1
        }, 
        {
            "body": "RailsAdmin::AbstractModel has a bug in it's \"all\" method. It searches for \"class <blah>\" inside <rails_root>/app/models/**/*.rb. However, some of those discoveries were inside comments/quotes.\r\n\r\nAs such, I've modified it to use the union of those finds and the result of Module.constants.\r\nI also added a bit of \"connascence\" in that I made the self.lookup method accept a true/false flag for determining when to throw an exception -- which it still does by default.\r\n\r\nCheers,\r\nJonathan\r\n\r\np.s.\r\n(I'm new to open-source, so feel free to give me feedback positive/negative.)\r\n", 
            "comments": 0, 
            "created_at": "2011/01/10 20:10:15 -0800", 
            "gravatar_id": "cf68a0fe4901556a1665e4e154bfe7c8", 
            "labels": [], 
            "number": 237, 
            "position": 144.0, 
            "state": "open", 
            "title": "Bug-Fix w/ discovering ActiveRecord models", 
            "updated_at": "2011/01/10 20:10:15 -0800", 
            "user": "JayTeeSF", 
            "votes": 0
        }
    ]
}
